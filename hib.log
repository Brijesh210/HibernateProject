[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 5.4.18.Final
[DEBUG] HHH000206: hibernate.properties not found
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[TRACE] reading mappings from file : src\xmlMaps\Address.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Address.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\FieldOfStudy.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\FieldOfStudy.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Person.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Person.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Student.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Student.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Subject.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Subject.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Teacher.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Teacher.hbm.xml,type=FILE)
[TRACE] reading mappings from file : src\xmlMaps\Test.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=src\xmlMaps\Test.hbm.xml,type=FILE)
[DEBUG] Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] Building session factory using provided StandardServiceRegistry
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/hiberlab12
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at util.HiberUtil.getXMLSessionFactory(HiberUtil.java:59)
	at util.HiberUtil.getSessionFactory(HiberUtil.java:44)
	at hiberApp.MainApp.<clinit>(MainApp.java:15)
[TRACE] Normalizing identifier quoting [hiberlab12]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Address.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\FieldOfStudy.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Person.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Student.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Subject.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Teacher.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=src\xmlMaps\Test.hbm.xml,type=FILE)] for purpose of building entity hierarchy ordering
[TRACE] Import: model1.Address -> model1.Address
[TRACE] Import: Address -> model1.Address
[TRACE] Normalizing identifier quoting [Addresses]
[DEBUG] Mapping class: model1.Address -> Addresses
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Mapped property: id -> [address_id]
[DEBUG] Forcing column [address_id] to be non-null as it is part of the primary key for table [addresses]
[DEBUG] Mapped property: person -> []
[TRACE] Normalizing identifier quoting [Country]
[DEBUG] Mapped property: Country -> [Country]
[TRACE] Normalizing identifier quoting [city]
[DEBUG] Mapped property: city -> [city]
[TRACE] Normalizing identifier quoting [PostalCode]
[DEBUG] Mapped property: PostalCode -> [PostalCode]
[TRACE] Normalizing identifier quoting [street]
[DEBUG] Mapped property: street -> [street]
[TRACE] Import: model1.FieldOfStudy -> model1.FieldOfStudy
[TRACE] Import: FieldOfStudy -> model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [FieldOfStudies]
[DEBUG] Mapping class: model1.FieldOfStudy -> FieldOfStudies
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: id -> [field_of_study_id]
[DEBUG] Forcing column [field_of_study_id] to be non-null as it is part of the primary key for table [fieldofstudies]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Mapped property: type -> [type]
[DEBUG] Mapped property: students -> []
[TRACE] Import: model1.Person -> model1.Person
[TRACE] Import: Person -> model1.Person
[TRACE] Normalizing identifier quoting [Persons]
[DEBUG] Mapping class: model1.Person -> Persons
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Mapped property: id -> [person_id]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[DEBUG] Mapped property: address -> []
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Mapped property: fName -> [fName]
[TRACE] Normalizing identifier quoting [sName]
[DEBUG] Mapped property: sName -> [sName]
[TRACE] Normalizing identifier quoting [email]
[DEBUG] Mapped property: email -> [email]
[TRACE] Import: model1.Student -> model1.Student
[TRACE] Import: Student -> model1.Student
[TRACE] Normalizing identifier quoting [Students]
[DEBUG] Mapping joined-subclass: model1.Student -> Students
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students]
[TRACE] Normalizing identifier quoting [semester]
[DEBUG] Mapped property: semester -> [semester]
[TRACE] Normalizing identifier quoting [indexNo]
[DEBUG] Mapped property: indexNo -> [indexNo]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: fieldOfStudys -> [field_of_study_id]
[DEBUG] Mapped property: tests -> []
[TRACE] Import: model1.Teacher -> model1.Teacher
[TRACE] Import: Teacher -> model1.Teacher
[TRACE] Normalizing identifier quoting [Teachers]
[DEBUG] Mapping joined-subclass: model1.Teacher -> Teachers
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teachers]
[TRACE] Normalizing identifier quoting [title]
[DEBUG] Mapped property: title -> [title]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[TRACE] Import: model1.Subject -> model1.Subject
[TRACE] Import: Subject -> model1.Subject
[TRACE] Normalizing identifier quoting [Subjects]
[DEBUG] Mapping class: model1.Subject -> Subjects
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: id -> [subject_id]
[DEBUG] Forcing column [subject_id] to be non-null as it is part of the primary key for table [subjects]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[DEBUG] Mapped property: teachers -> []
[DEBUG] Mapped property: tests -> []
[TRACE] Import: model1.Test -> model1.Test
[TRACE] Import: Test -> model1.Test
[TRACE] Normalizing identifier quoting [Tests]
[DEBUG] Mapping class: model1.Test -> Tests
[TRACE] Normalizing identifier quoting [test_id]
[DEBUG] Mapped property: id -> [test_id]
[DEBUG] Forcing column [test_id] to be non-null as it is part of the primary key for table [tests]
[TRACE] Normalizing identifier quoting [grade]
[DEBUG] Mapped property: grade -> [grade]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Mapped property: date -> [date]
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Mapped property: student -> [student_id]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[DEBUG] Mapping collection: model1.FieldOfStudy.students -> Students
[TRACE] Normalizing identifier quoting [field_study_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.FieldOfStudy.students
[DEBUG]    + table -> FieldOfStudies
[DEBUG]    + key -> field_study_id
[DEBUG]    + one-to-many -> model1.Student
[DEBUG] Mapping collection: model1.Student.tests -> Tests
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Student.tests
[DEBUG]    + table -> Students
[DEBUG]    + key -> student_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Mapping collection: model1.Subject.teachers -> Teachers
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.teachers
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Teacher
[DEBUG] Mapping collection: model1.Subject.tests -> Tests
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.tests
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [address_id]
[TRACE] Normalizing identifier quoting [FK9fnj34i7xvlji8epg232txpan]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_study_id]
[TRACE] Normalizing identifier quoting [FKqaic8851nktdlh5hh03od2u4d]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\txw2-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\antlr-2.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\dom4j-2.1.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\stax-ex-1.8.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\c3p0-0.9.5.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\log4j-1.2.16.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-api-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\classmate-1.5.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-api-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\byte-buddy-1.10.10.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\FastInfoset-1.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jandex-2.1.3.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-runtime-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javassist-3.24.0-GA.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-log4j12-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-logging-3.3.2.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.activation-api-1.2.0.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mysql-connector-java-5.1.6.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-c3p0-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mchange-commons-java-0.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\istack-commons-runtime-3.0.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr\bin, sun.java.command=hiberApp.MainApp, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\b___b, hibernate.c3p0.max_statements=10, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.4+10-b304.77, user.name=Brijesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/hiberlab12, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\b___b\AppData\Local\Temp\, java.version=11.0.4, user.dir=C:\Users\b___b\Desktop\SEM_2\ORI\New, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dba4e06, java.library.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk-12.0.2\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Android;C:\Windows\System32;C:\Program Files\MATLAB\R2019b\bin;C:\Program Files\dotnet\;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin\;C:\Program Files\IVI Foundation\VISA\Win64\Bin\;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin;C:\Program Files\Java\jdk-15.0.1;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\;C:\Users\b___b\AppData\Local\Microsoft\WindowsApps;;C:\Users\b___b\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\b___b\.dotnet\tools;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, java.vm.version=11.0.4+10-b304.77, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [grade], existing type = [org.hibernate.type.DoubleType@1a6f5124], incoming type = [org.hibernate.type.DoubleType@1a6f5124]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.LocalDateType@ea27e34], incoming type = [org.hibernate.type.LocalDateType@ea27e34]
[TRACE] Skipping duplicate registration of path [student], existing type = [org.hibernate.type.ManyToOneType(model1.Student)], incoming type = [org.hibernate.type.ManyToOneType(model1.Student)]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Student
[DEBUG] Not known whether passed class name [model1.Teacher] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Teacher
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.OneToOneType(model1.Address)], incoming type = [org.hibernate.type.OneToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@41382722], incoming type = [org.hibernate.type.IntegerType@41382722]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [person], existing type = [org.hibernate.type.OneToOneType(model1.Person)], incoming type = [org.hibernate.type.OneToOneType(model1.Person)]
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [Country], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [PostalCode], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [street], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model1.FieldOfStudy.students)], incoming type = [org.hibernate.type.SetType(model1.FieldOfStudy.students)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.OneToOneType(model1.Address)], incoming type = [org.hibernate.type.OneToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@41382722], incoming type = [org.hibernate.type.IntegerType@41382722]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [teachers], existing type = [org.hibernate.type.SetType(model1.Subject.teachers)], incoming type = [org.hibernate.type.SetType(model1.Subject.teachers)]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Subject.tests)], incoming type = [org.hibernate.type.SetType(model1.Subject.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.OneToOneType(model1.Address)], incoming type = [org.hibernate.type.OneToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@41c07648], incoming type = [org.hibernate.type.StringType@41c07648]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@372b0d86], incoming type = [org.hibernate.type.LongType@372b0d86]
[DEBUG] Static SQL for collection: model1.FieldOfStudy.students
[DEBUG]  Row insert: update Students set field_study_id=? where student_id=?
[DEBUG]  Row update: update Students set  where student_id=?
[DEBUG]  Row delete: update Students set field_study_id=null where field_study_id=? and student_id=?
[DEBUG]  One-shot delete: update Students set field_study_id=null where field_study_id=?
[DEBUG] Static SQL for collection: model1.Student.tests
[DEBUG]  Row insert: update Tests set student_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set student_id=null where student_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set student_id=null where student_id=?
[DEBUG] Static SQL for collection: model1.Subject.teachers
[DEBUG]  Row insert: update Teachers set subject_id=? where teacher_id=?
[DEBUG]  Row update: update Teachers set  where teacher_id=?
[DEBUG]  Row delete: update Teachers set subject_id=null where subject_id=? and teacher_id=?
[DEBUG]  One-shot delete: update Teachers set subject_id=null where subject_id=?
[DEBUG] Static SQL for collection: model1.Subject.tests
[DEBUG]  Row insert: update Tests set subject_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set subject_id=null where subject_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set subject_id=null where subject_id=?
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model1.Test
[DEBUG]  Version select: select test_id from Tests where test_id =?
[DEBUG]  Snapshot select: select test_.test_id, test_.grade as grade2_6_, test_.date as date3_6_, test_.student_id as student_4_6_, test_.subject_id as subject_5_6_ from Tests test_ where test_.test_id=?
[DEBUG]  Insert 0: insert into Tests (grade, date, student_id, subject_id, test_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Tests set grade=?, date=?, student_id=?, subject_id=? where test_id=?
[DEBUG]  Delete 0: delete from Tests where test_id=?
[DEBUG]  Identity insert: insert into Tests (grade, date, student_id, subject_id) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cd26422]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b01a0d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b01a0d
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3610f277]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62c72501]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b01a0d
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [NONE]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f34907b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b4d4327
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b4d4327
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16da1abc]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671ea6ff]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b4d4327
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [READ]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static SQL for entity: model1.Person
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select person_.person_id, person_.fName as fname2_2_, person_.sName as sname3_2_, person_.email as email4_2_ from Persons person_ where person_.person_id=?
[DEBUG]  Insert 0: insert into Persons (fName, sName, email, person_id) values (?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Identity insert: insert into Persons (fName, sName, email) values (?, ?, ?)
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557b6a37]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b32a14
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b32a14
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c33e528]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1cf336fd
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1cf336fd
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1cf336fd
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0cac30]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35c4697c]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b0afd7]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7793ad58]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b32a14
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Person [NONE]: select person0_.person_id as person_i1_2_0_, person0_.fName as fname2_2_0_, person0_.sName as sname3_2_0_, person0_.email as email4_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.person_id=address1_.address_id where person0_.person_id=?
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f323b3a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f169009
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f169009
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dada78]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4207852d
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4207852d
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4207852d
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c829dbc]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57efc6fd]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839df62]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e90da5]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f169009
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Person [READ]: select person0_.person_id as person_i1_2_0_, person0_.fName as fname2_2_0_, person0_.sName as sname3_2_0_, person0_.email as email4_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.person_id=address1_.address_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.fName as fname2_2_0_, person0_.sName as sname3_2_0_, person0_.email as email4_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.fName as fname2_2_0_, person0_.sName as sname3_2_0_, person0_.email as email4_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[DEBUG] Static SQL for entity: model1.Address
[DEBUG]  Version select: select address_id from Addresses where address_id =?
[DEBUG]  Snapshot select: select address_.address_id, address_.Country as country2_0_, address_.city as city3_0_, address_.PostalCode as postalco4_0_, address_.street as street5_0_ from Addresses address_ where address_.address_id=?
[DEBUG]  Insert 0: insert into Addresses (Country, city, PostalCode, street, address_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Addresses set Country=?, city=?, PostalCode=?, street=? where address_id=?
[DEBUG]  Delete 0: delete from Addresses where address_id=?
[DEBUG]  Identity insert: insert into Addresses (Country, city, PostalCode, street) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3e11b9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67cffead
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67cffead
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : person
[DEBUG] Property path deemed to be circular : person
[DEBUG] Visiting attribute path : Country
[TRACE] >> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : PostalCode
[TRACE] >> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67cffead
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.Country as country2_0_0_, address0_.city as city3_0_0_, address0_.PostalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214beff9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ff15a50
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ff15a50
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : person
[DEBUG] Property path deemed to be circular : person
[DEBUG] Visiting attribute path : Country
[TRACE] >> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : PostalCode
[TRACE] >> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ff15a50
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.Country as country2_0_0_, address0_.city as city3_0_0_, address0_.PostalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.Country as country2_0_0_, address0_.city as city3_0_0_, address0_.PostalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.Country as country2_0_0_, address0_.city as city3_0_0_, address0_.PostalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static SQL for entity: model1.FieldOfStudy
[DEBUG]  Version select: select field_of_study_id from FieldOfStudies where field_of_study_id =?
[DEBUG]  Snapshot select: select fieldofstu_.field_of_study_id, fieldofstu_.name as name2_1_, fieldofstu_.type as type3_1_ from FieldOfStudies fieldofstu_ where fieldofstu_.field_of_study_id=?
[DEBUG]  Insert 0: insert into FieldOfStudies (name, type, field_of_study_id) values (?, ?, ?)
[DEBUG]  Update 0: update FieldOfStudies set name=?, type=? where field_of_study_id=?
[DEBUG]  Delete 0: delete from FieldOfStudies where field_of_study_id=?
[DEBUG]  Identity insert: insert into FieldOfStudies (name, type) values (?, ?)
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217c23ce]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39de9bda
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39de9bda
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47148f3f]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52226e57]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39de9bda
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
          - CollectionAttributeFetchImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:1>, path=model1.FieldOfStudy.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:2>, path=model1.FieldOfStudy.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [NONE]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1200458e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fcd1c5f
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fcd1c5f
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cc30dee]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d528cf7]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fcd1c5f
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
          - CollectionAttributeFetchImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:1>, path=model1.FieldOfStudy.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:2>, path=model1.FieldOfStudy.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [READ]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static SQL for entity: model1.Student
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select student_.student_id, student_1_.fName as fname2_2_, student_1_.sName as sname3_2_, student_1_.email as email4_2_, student_.semester as semester2_3_, student_.indexNo as indexno3_3_, student_.field_of_study_id as field_of4_3_ from Students student_ inner join Persons student_1_ on student_.student_id=student_1_.person_id where student_.student_id=?
[DEBUG]  Insert 0: insert into Persons (fName, sName, email, person_id) values (?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Students (semester, indexNo, field_of_study_id, student_id) values (?, ?, ?, ?)
[DEBUG]  Update 1: update Students set semester=?, indexNo=?, field_of_study_id=? where student_id=?
[DEBUG]  Delete 1: delete from Students where student_id=?
[DEBUG]  Identity insert: insert into Persons (fName, sName, email) values (?, ?, ?)
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dee8ae6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af64ce0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af64ce0
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7e962d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@17229821
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@17229821
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@17229821
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e829999]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66fb45e5]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbe68e9]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af64ce0
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Student [NONE]: select student0_.student_id as person_i1_2_0_, student0_1_.fName as fname2_2_0_, student0_1_.sName as sname3_2_0_, student0_1_.email as email4_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_.student_id=address1_.address_id where student0_.student_id=?
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5e16cf]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@750a04ec
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@750a04ec
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e2b3c5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56846330
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56846330
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56846330
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f3ff41]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cfbbff7]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30db5536]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@750a04ec
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Student [READ]: select student0_.student_id as person_i1_2_0_, student0_1_.fName as fname2_2_0_, student0_1_.sName as sname3_2_0_, student0_1_.email as email4_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_.student_id=address1_.address_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.fName as fname2_2_0_, student0_1_.sName as sname3_2_0_, student0_1_.email as email4_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.fName as fname2_2_0_, student0_1_.sName as sname3_2_0_, student0_1_.email as email4_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static SQL for entity: model1.Subject
[DEBUG]  Version select: select subject_id from Subjects where subject_id =?
[DEBUG]  Snapshot select: select subject_.subject_id, subject_.name as name2_4_ from Subjects subject_ where subject_.subject_id=?
[DEBUG]  Insert 0: insert into Subjects (name, subject_id) values (?, ?)
[DEBUG]  Update 0: update Subjects set name=? where subject_id=?
[DEBUG]  Delete 0: delete from Subjects where subject_id=?
[DEBUG]  Identity insert: insert into Subjects (name) values (?)
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b32dfe]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@136ccbfe
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@136ccbfe
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22d9ca63]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@484149eb]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14c141c0]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61874b9d]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@136ccbfe
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [NONE]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d611f1c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f2d014a
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f2d014a
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51fc862e]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7cf42f]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fe09383]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e0e464]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f2d014a
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [READ]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static SQL for entity: model1.Teacher
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select teacher_.teacher_id, teacher_1_.fName as fname2_2_, teacher_1_.sName as sname3_2_, teacher_1_.email as email4_2_, teacher_.title as title2_5_, teacher_.subject_id as subject_3_5_ from Teachers teacher_ inner join Persons teacher_1_ on teacher_.teacher_id=teacher_1_.person_id where teacher_.teacher_id=?
[DEBUG]  Insert 0: insert into Persons (fName, sName, email, person_id) values (?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Teachers (title, subject_id, teacher_id) values (?, ?, ?)
[DEBUG]  Update 1: update Teachers set title=?, subject_id=? where teacher_id=?
[DEBUG]  Delete 1: delete from Teachers where teacher_id=?
[DEBUG]  Identity insert: insert into Persons (fName, sName, email) values (?, ?, ?)
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d98daa0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70a898b0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70a898b0
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bdf61ad]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@54336976
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@54336976
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@54336976
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f25f48a]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70a898b0
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Teacher [NONE]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.fName as fname2_2_0_, teacher0_1_.sName as sname3_2_0_, teacher0_1_.email as email4_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_.teacher_id=address1_.address_id where teacher0_.teacher_id=?
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7c80c6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2e5c0d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2e5c0d
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7499eac7]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5438c17a
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5438c17a
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5438c17a
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9d018b]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2e5c0d
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

[DEBUG] Static select for entity model1.Teacher [READ]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.fName as fname2_2_0_, teacher0_1_.sName as sname3_2_0_, teacher0_1_.email as email4_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_, address1_.address_id as address_1_0_1_, address1_.Country as country2_0_1_, address1_.city as city3_0_1_, address1_.PostalCode as postalco4_0_1_, address1_.street as street5_0_1_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_.teacher_id=address1_.address_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.fName as fname2_2_0_, teacher0_1_.sName as sname3_2_0_, teacher0_1_.email as email4_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.fName as fname2_2_0_, teacher0_1_.sName as sname3_2_0_, teacher0_1_.email as email4_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[TRACE]  Starting root collection : model1.FieldOfStudy.students
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ea2412c]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c93b51e]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@7c0f28f8
[TRACE]  Registering AssociationKey : AssociationKey(table=Students, columns={field_study_id}) -> null
[TRACE]  Starting collection element graph : model1.FieldOfStudy.students
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5e230fc6
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8341c1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@ca8ef3a
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@ca8ef3a
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@ca8ef3a
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17043b04]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@511f5b1d]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31f295b6]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5e230fc6
[TRACE]  Finished collection element graph : model1.FieldOfStudy.students
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@7c0f28f8
[TRACE]  Finished root collection : model1.FieldOfStudy.students
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.FieldOfStudy.students)
    - Returns
       - CollectionReturnImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:0>, path=[model1.FieldOfStudy.students])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:1>, path=[model1.FieldOfStudy.students].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.FieldOfStudy.students].<elements>.address)
             - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=[model1.FieldOfStudy.students].<elements>.fieldOfStudys)
             - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=[model1.FieldOfStudy.students].<elements>.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=[model1.FieldOfStudy.students].<elements>.tests.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.FieldOfStudy.students)
          - SQL table alias mapping - students0_
          - alias suffix - 0_
          - suffixed key columns - {field_st5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Student)
                - SQL table alias mapping - students0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}

[DEBUG] Static select for collection model1.FieldOfStudy.students: select students0_.field_study_id as field_st5_3_0_, students0_.student_id as student_1_3_0_, students0_.student_id as person_i1_2_1_, students0_1_.fName as fname2_2_1_, students0_1_.sName as sname3_2_1_, students0_1_.email as email4_2_1_, students0_.semester as semester2_3_1_, students0_.indexNo as indexno3_3_1_, students0_.field_of_study_id as field_of4_3_1_, address1_.address_id as address_1_0_2_, address1_.Country as country2_0_2_, address1_.city as city3_0_2_, address1_.PostalCode as postalco4_0_2_, address1_.street as street5_0_2_ from Students students0_ inner join Persons students0_1_ on students0_.student_id=students0_1_.person_id left outer join Addresses address1_ on students0_.student_id=address1_.address_id where students0_.field_study_id=?
[TRACE]  Starting root collection : model1.Student.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@566f1852]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea246af]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@2e4389ed
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={student_id}) -> null
[TRACE]  Starting collection element graph : model1.Student.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1b90fee4
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[DEBUG] Property path deemed to be circular : student
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3513c84c]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1b90fee4
[TRACE]  Finished collection element graph : model1.Student.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@2e4389ed
[TRACE]  Finished root collection : model1.Student.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Student.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Student.tests, querySpaceUid=<gen:0>, path=[model1.Student.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Student.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=[model1.Student.tests].<elements>.subject)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Student.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {student_4_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Student.tests: select tests0_.student_id as student_4_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.student_id=?
[TRACE]  Starting root collection : model1.Subject.teachers
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4978777f]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc6935c]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@67bd351e
[TRACE]  Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.teachers
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4cc7d00d
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468e8565]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@91da29b
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@91da29b
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.person
[DEBUG] Property path deemed to be circular : address.person
[DEBUG] Visiting attribute path : address.Country
[TRACE] >>>> Starting attribute Attribute(name=Country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=Country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.PostalCode
[TRACE] >>>> Starting attribute Attribute(name=PostalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=PostalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@91da29b
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4cc7d00d
[TRACE]  Finished collection element graph : model1.Subject.teachers
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@67bd351e
[TRACE]  Finished root collection : model1.Subject.teachers
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:0>, path=[model1.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:1>, path=[model1.Subject.teachers].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.Subject.teachers].<elements>.address)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_3_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Teacher)
                - SQL table alias mapping - teachers0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}

[DEBUG] Static select for collection model1.Subject.teachers: select teachers0_.subject_id as subject_3_5_0_, teachers0_.teacher_id as teacher_1_5_0_, teachers0_.teacher_id as person_i1_2_1_, teachers0_1_.fName as fname2_2_1_, teachers0_1_.sName as sname3_2_1_, teachers0_1_.email as email4_2_1_, teachers0_.title as title2_5_1_, teachers0_.subject_id as subject_3_5_1_, address1_.address_id as address_1_0_2_, address1_.Country as country2_0_2_, address1_.city as city3_0_2_, address1_.PostalCode as postalco4_0_2_, address1_.street as street5_0_2_ from Teachers teachers0_ inner join Persons teachers0_1_ on teachers0_.teacher_id=teachers0_1_.person_id left outer join Addresses address1_ on teachers0_.teacher_id=address1_.address_id where teachers0_.subject_id=?
[TRACE]  Starting root collection : model1.Subject.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7066363]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b38c36]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@47248a48
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2349f14d
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e0933c]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2349f14d
[TRACE]  Finished collection element graph : model1.Subject.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@47248a48
[TRACE]  Finished root collection : model1.Subject.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.tests, querySpaceUid=<gen:0>, path=[model1.Subject.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Subject.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:2>, path=[model1.Subject.tests].<elements>.student)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {subject_5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Subject.tests: select tests0_.subject_id as subject_5_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.subject_id=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model1.Test]
[TRACE] Building identifier attribute [Test.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Test.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Test.grade]
[TRACE] Starting attribute metadata determination [grade]
[TRACE]     Determined member [public double model1.Test.getGrade()]
[TRACE]     Determined type [name=double, class=org.hibernate.type.DoubleType]
[TRACE] Building attribute [Test.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [public java.time.LocalDate model1.Test.getDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Test.student]
[TRACE] Starting attribute metadata determination [student]
[TRACE]     Determined member [public model1.Student model1.Test.getStudent()]
[TRACE]     Determined type [name=model1.Student, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Test.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Test.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Test]
[TRACE] Starting entity [model1.Person]
[TRACE] Building identifier attribute [Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Person.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Person.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [public model1.Address model1.Person.getAddress()]
[TRACE]     Determined type [name=model1.Address, class=org.hibernate.type.OneToOneType]
[TRACE] Building attribute [Person.fName]
[TRACE] Starting attribute metadata determination [fName]
[TRACE]     Determined member [public java.lang.String model1.Person.getfName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.sName]
[TRACE] Starting attribute metadata determination [sName]
[TRACE]     Determined member [public java.lang.String model1.Person.getsName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.email]
[TRACE] Starting attribute metadata determination [email]
[TRACE]     Determined member [public java.lang.String model1.Person.getEmail()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Person]
[TRACE] Starting entity [model1.Address]
[TRACE] Building identifier attribute [Address.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Address.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Address.person]
[TRACE] Starting attribute metadata determination [person]
[TRACE]     Determined member [public model1.Person model1.Address.getPerson()]
[TRACE]     Determined type [name=model1.Person, class=org.hibernate.type.OneToOneType]
[TRACE] Building attribute [Address.Country]
[TRACE] Starting attribute metadata determination [Country]
[TRACE]     Determined member [public java.lang.String model1.Address.getCountry()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.city]
[TRACE] Starting attribute metadata determination [city]
[TRACE]     Determined member [public java.lang.String model1.Address.getCity()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.PostalCode]
[TRACE] Starting attribute metadata determination [PostalCode]
[TRACE]     Determined member [public java.lang.String model1.Address.getPostalCode()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.street]
[TRACE] Starting attribute metadata determination [street]
[TRACE]     Determined member [public java.lang.String model1.Address.getStreet()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Address]
[TRACE] Starting entity [model1.FieldOfStudy]
[TRACE] Building identifier attribute [FieldOfStudy.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.FieldOfStudy.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [FieldOfStudy.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [FieldOfStudy.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getType()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [FieldOfStudy.students]
[TRACE] Starting attribute metadata determination [students]
[TRACE]     Determined member [public java.util.Set model1.FieldOfStudy.getStudents()]
[TRACE]     Determined type [name=java.util.Set(model1.FieldOfStudy.students), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.FieldOfStudy]
[TRACE] Starting entity [model1.Student]
[TRACE] Building attribute [Student.semester]
[TRACE] Starting attribute metadata determination [semester]
[TRACE]     Determined member [public int model1.Student.getSemester()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Student.indexNo]
[TRACE] Starting attribute metadata determination [indexNo]
[TRACE]     Determined member [public java.lang.String model1.Student.getIndexNo()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Student.fieldOfStudys]
[TRACE] Starting attribute metadata determination [fieldOfStudys]
[TRACE]     Determined member [public model1.FieldOfStudy model1.Student.getFieldOfStudys()]
[TRACE]     Determined type [name=model1.FieldOfStudy, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Student.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Student.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Student]
[TRACE] Starting entity [model1.Subject]
[TRACE] Building identifier attribute [Subject.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Subject.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Subject.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.Subject.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Subject.teachers]
[TRACE] Starting attribute metadata determination [teachers]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTeachers()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.teachers), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Subject.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Subject]
[TRACE] Starting entity [model1.Teacher]
[TRACE] Building attribute [Teacher.title]
[TRACE] Starting attribute metadata determination [title]
[TRACE]     Determined member [public java.lang.String model1.Teacher.getTitle()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Teacher.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Teacher.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Teacher]
[TRACE] Normalizing identifier quoting [HT_Persons]
[TRACE] Normalizing identifier quoting [HT_Students]
[TRACE] Normalizing identifier quoting [HT_Teachers]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@536b71b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL "alter table Addresses drop foreign key FK9fnj34i7xvlji8epg232txpan" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table Addresses drop foreign key FK9fnj34i7xvlji8epg232txpan" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at util.HiberUtil.getXMLSessionFactory(HiberUtil.java:59)
	at util.HiberUtil.getSessionFactory(HiberUtil.java:44)
	at hiberApp.MainApp.<clinit>(MainApp.java:15)
Caused by: java.sql.SQLException: Error on rename of '.\hiberlab12\addresses' to '.\hiberlab12\#sql2-2040-7' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1055)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1936)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2060)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2536)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:734)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:75)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5af5d76f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@151ab2b9
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: 76bb1498-31fb-47f2-a630-a328c529790f (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Opened Session [47dbb27d-9dd5-4e3e-92af-791e0f0918d6] at timestamp: 1605194995698
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model1.Person#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Adding an EntityIdentityInsertAction for [model1.Person] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Person (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@67d4c48d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Person#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f3fc42f [wrapping: com.mysql.jdbc.JDBC4ResultSet@79ba0a6f]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f3fc42f [wrapping: com.mysql.jdbc.JDBC4ResultSet@79ba0a6f]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@67d4c48d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('John', 'Smith', 'johnsnith@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@67d4c48d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('John', 'Smith', 'johnsnith@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f7a2a5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@65c17e38 [wrapping: com.mysql.jdbc.JDBC4ResultSet@42ed89da]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@65c17e38 [wrapping: com.mysql.jdbc.JDBC4ResultSet@42ed89da]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f7a2a5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('germany', 'warsaw', '30-100', 'waclowska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f7a2a5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('germany', 'warsaw', '30-100', 'waclowska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Saving transient instance
[TRACE] Saving [model1.Person#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Adding an EntityIdentityInsertAction for [model1.Person] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Person (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b415f5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Person#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@617449dd [wrapping: com.mysql.jdbc.JDBC4ResultSet@66749eea]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@617449dd [wrapping: com.mysql.jdbc.JDBC4ResultSet@66749eea]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b415f5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('Tom', 'Jones', 'tomjones@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b415f5f [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('Tom', 'Jones', 'tomjones@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1df5c7e3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@166c2c17 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5e0c4f21]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@166c2c17 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5e0c4f21]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1df5c7e3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('germany', 'gliwice', '44-100', 'surat')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1df5c7e3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('germany', 'gliwice', '44-100', 'surat')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] Listing entities:
[DEBUG] model1.Person{address=model1.Address#2, fName=Tom, sName=Jones, id=2, email=tomjones@gmail.com}
[DEBUG] model1.Address{city=warsaw, person=null, street=waclowska, Country=germany, PostalCode=30-100, id=1}
[DEBUG] model1.Person{address=model1.Address#1, fName=John, sName=Smith, id=1, email=johnsnith@gmail.com}
[DEBUG] model1.Address{city=gliwice, person=null, street=surat, Country=germany, PostalCode=44-100, id=2}
[TRACE] Executing flush
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model1.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Transient instance of: model1.FieldOfStudy
[TRACE] Saving transient instance
[TRACE] Saving [model1.FieldOfStudy#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Wrapped collection in role: model1.FieldOfStudy.students
[TRACE] Adding an EntityIdentityInsertAction for [model1.FieldOfStudy] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.FieldOfStudy (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4f1fb828 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.FieldOfStudy#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@45592af7 [wrapping: com.mysql.jdbc.JDBC4ResultSet@6ee5f485]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@45592af7 [wrapping: com.mysql.jdbc.JDBC4ResultSet@6ee5f485]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4f1fb828 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values ('Informatics', 'S2')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4f1fb828 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values ('Informatics', 'S2')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@53eba4b8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6fa02932 [wrapping: com.mysql.jdbc.JDBC4ResultSet@437bd805]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6fa02932 [wrapping: com.mysql.jdbc.JDBC4ResultSet@437bd805]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@53eba4b8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('ismail', 'atajanov ', 'ismail@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@53eba4b8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('ismail', 'atajanov ', 'ismail@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Student#3]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1961d75a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#3]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1961d75a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (5, '345293', 1, 3)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1961d75a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (5, '345293', 1, 3)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c5df615 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@9df564f [wrapping: com.mysql.jdbc.JDBC4ResultSet@2f995afc]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@9df564f [wrapping: com.mysql.jdbc.JDBC4ResultSet@2f995afc]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c5df615 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('poland', 'gliwice', '44-100', 'kujawska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c5df615 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('poland', 'gliwice', '44-100', 'kujawska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Saving transient instance
[TRACE] Saving [model1.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Transient instance of: model1.FieldOfStudy
[TRACE] Saving transient instance
[TRACE] Saving [model1.FieldOfStudy#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Wrapped collection in role: model1.FieldOfStudy.students
[TRACE] Adding an EntityIdentityInsertAction for [model1.FieldOfStudy] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.FieldOfStudy (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15d3793b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.FieldOfStudy#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@68a305eb [wrapping: com.mysql.jdbc.JDBC4ResultSet@55e1192]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@68a305eb [wrapping: com.mysql.jdbc.JDBC4ResultSet@55e1192]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15d3793b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values ('Informatics', 'S1')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15d3793b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@361e5c36: insert into FieldOfStudies (name, type) values ('Informatics', 'S1')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ef31f71 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2199e845 [wrapping: com.mysql.jdbc.JDBC4ResultSet@6e8fdd19]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2199e845 [wrapping: com.mysql.jdbc.JDBC4ResultSet@6e8fdd19]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ef31f71 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('gafar', 'azeez', 'gafar@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ef31f71 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('gafar', 'azeez', 'gafar@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Student#4]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37e0056e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#4]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37e0056e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (2, '342292', 2, 4)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37e0056e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@81da5f6: insert into Students (semester, indexNo, field_of_study_id, student_id) values (2, '342292', 2, 4)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@40717ed [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5dbbb292 [wrapping: com.mysql.jdbc.JDBC4ResultSet@29f3c438]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5dbbb292 [wrapping: com.mysql.jdbc.JDBC4ResultSet@29f3c438]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@40717ed [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('poland', 'katowice', '42-102', 'Opolska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@40717ed [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19299449: insert into Addresses (Country, city, PostalCode, street) values ('poland', 'katowice', '42-102', 'Opolska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Saving transient instance
[TRACE] Saving [model1.Teacher#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Adding an EntityIdentityInsertAction for [model1.Teacher] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Teacher (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@528c8c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#<null>]
[DEBUG] Natively generated identity: 5
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@27960b1e [wrapping: com.mysql.jdbc.JDBC4ResultSet@1f78d415]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@27960b1e [wrapping: com.mysql.jdbc.JDBC4ResultSet@1f78d415]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@528c8c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('vish', 'anaghan', 'vishal@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@528c8c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('vish', 'anaghan', 'vishal@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Teacher#5]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@26582ca [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@26582ca [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values ('Proff', null, 5)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@26582ca [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values ('Proff', null, 5)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Saving transient instance
[TRACE] Saving [model1.Teacher#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Adding an EntityIdentityInsertAction for [model1.Teacher] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Teacher (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f731759 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#<null>]
[DEBUG] Natively generated identity: 6
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@dbddbe3 [wrapping: com.mysql.jdbc.JDBC4ResultSet@1f84327b]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@dbddbe3 [wrapping: com.mysql.jdbc.JDBC4ResultSet@1f84327b]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f731759 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('ashish', 'sutariya', 'ashish@gmail.com')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6f731759 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5e840a04: insert into Persons (fName, sName, email) values ('ashish', 'sutariya', 'ashish@gmail.com')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Teacher#6]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@44aa2e13 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#6]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@44aa2e13 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values ('Assistance', null, 6)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@44aa2e13 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@6b402e12: insert into Teachers (title, subject_id, teacher_id) values ('Assistance', null, 6)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#4]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Transient instance of: model1.Subject
[TRACE] Saving transient instance
[TRACE] Saving [model1.Subject#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Wrapped collection in role: model1.Subject.teachers
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Subject] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Subject (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4776e209 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Subject#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5234b61a [wrapping: com.mysql.jdbc.JDBC4ResultSet@265a094b]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5234b61a [wrapping: com.mysql.jdbc.JDBC4ResultSet@265a094b]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4776e209 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values ('avrs')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4776e209 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values ('avrs')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#<null>]
[TRACE] Cascading to save or update: model1.Test
[TRACE] Transient instance of: model1.Test
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#4]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@50b734c4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6274f21c [wrapping: com.mysql.jdbc.JDBC4ResultSet@33e0c716]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6274f21c [wrapping: com.mysql.jdbc.JDBC4ResultSet@33e0c716]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@50b734c4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (4.0, '2020-09-22', 4, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@50b734c4 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (4.0, '2020-09-22', 4, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Test
[TRACE] Transient instance of: model1.Test
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#3]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Transient instance of: model1.Subject
[TRACE] Saving transient instance
[TRACE] Saving [model1.Subject#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Wrapped collection in role: model1.Subject.teachers
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Subject] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Subject (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@cbd40c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Subject#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7889b4b9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@4fa86cb8]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7889b4b9 [wrapping: com.mysql.jdbc.JDBC4ResultSet@4fa86cb8]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@cbd40c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values ('ori')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@cbd40c1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@722b2ad2: insert into Subjects (name) values ('ori')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#1]
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#<null>]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12952aff [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f977fba [wrapping: com.mysql.jdbc.JDBC4ResultSet@76a7fcbd]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f977fba [wrapping: com.mysql.jdbc.JDBC4ResultSet@76a7fcbd]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12952aff [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (5.0, '2020-09-21', 3, 2)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12952aff [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (5.0, '2020-09-21', 3, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@d653e41 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@480cbe2e [wrapping: com.mysql.jdbc.JDBC4ResultSet@3b78c683]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@480cbe2e [wrapping: com.mysql.jdbc.JDBC4ResultSet@3b78c683]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@d653e41 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (3.0, '2020-09-20', 4, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@d653e41 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@3342eb: insert into Tests (grade, date, student_id, subject_id) values (3.0, '2020-09-20', 4, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#2]
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#1]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Persistent instance of: model1.FieldOfStudy
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.FieldOfStudy#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#4]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Persistent instance of: model1.FieldOfStudy
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.FieldOfStudy#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.FieldOfStudy.students
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.FieldOfStudy
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Address
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#4]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#3]
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#1]
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#4]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Cascading to save or update: model1.Student
[TRACE] Persistent instance of: model1.Student
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Student#3]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Test
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.teachers
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#1]
[TRACE] Cascading to save or update: model1.Test
[TRACE] Persistent instance of: model1.Test
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Test#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model1.Subject.tests
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Subject
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] model1.Student.tests is dirty
[TRACE] Found dirty properties [[model1.Student#3]] : [tests]
[TRACE] Updating entity: [model1.Student#3]
[DEBUG] Collection found: [model1.Student.tests#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.FieldOfStudy.students#1], was: [<unreferenced>] (initialized)
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] model1.Student.tests is dirty
[TRACE] Found dirty properties [[model1.Student#4]] : [tests]
[TRACE] Updating entity: [model1.Student#4]
[DEBUG] Collection found: [model1.Student.tests#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.FieldOfStudy.students#2], was: [<unreferenced>] (initialized)
[TRACE] model1.Teacher.subject is dirty
[TRACE] Found dirty properties [[model1.Teacher#5]] : [subject]
[TRACE] Updating entity: [model1.Teacher#5]
[TRACE] model1.Teacher.subject is dirty
[TRACE] Found dirty properties [[model1.Teacher#6]] : [subject]
[TRACE] Updating entity: [model1.Teacher#6]
[DEBUG] Collection found: [model1.Subject.teachers#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.Subject.tests#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.Subject.teachers#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.Subject.tests#2], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 4 updates, 0 deletions to 17 objects
[DEBUG] Flushed: 8 (re)creations, 0 updates, 0 removals to 10 collections
[DEBUG] Listing entities:
[DEBUG] model1.Test{date=2020-09-20, student=model1.Student#4, subject=model1.Subject#1, grade=3.0, id=3}
[DEBUG] model1.Address{city=gliwice, person=null, street=kujawska, Country=poland, PostalCode=44-100, id=3}
[DEBUG] model1.Test{date=2020-09-21, student=model1.Student#3, subject=model1.Subject#2, grade=5.0, id=2}
[DEBUG] model1.Address{city=katowice, person=null, street=Opolska, Country=poland, PostalCode=42-102, id=4}
[DEBUG] model1.Test{date=2020-09-22, student=model1.Student#4, subject=model1.Subject#1, grade=4.0, id=1}
[DEBUG] model1.Address{city=warsaw, person=null, street=waclowska, Country=germany, PostalCode=30-100, id=1}
[DEBUG] model1.Address{city=gliwice, person=null, street=surat, Country=germany, PostalCode=44-100, id=2}
[DEBUG] model1.Teacher{address=null, fName=ashish, subject=model1.Subject#1, sName=sutariya, id=6, title=Assistance, email=ashish@gmail.com}
[DEBUG] model1.Student{address=model1.Address#4, fName=gafar, tests=[model1.Test#3], sName=azeez, indexNo=342292, semester=2, id=4, fieldOfStudys=model1.FieldOfStudy#2, email=gafar@gmail.com}
[DEBUG] model1.Subject{tests=[model1.Test#1, model1.Test#2], teachers=[], name=ori, id=2}
[DEBUG] model1.Teacher{address=model1.Address#3, fName=vish, subject=model1.Subject#2, sName=anaghan, id=5, title=Proff, email=vishal@gmail.com}
[DEBUG] model1.Subject{tests=[model1.Test#3, model1.Test#1, model1.Test#2], teachers=[], name=avrs, id=1}
[DEBUG] model1.Person{address=model1.Address#2, fName=Tom, sName=Jones, id=2, email=tomjones@gmail.com}
[DEBUG] model1.Student{address=model1.Address#3, fName=ismail, tests=[model1.Test#3, model1.Test#1, model1.Test#2], sName=atajanov , indexNo=345293, semester=5, id=3, fieldOfStudys=model1.FieldOfStudy#1, email=ismail@gmail.com}
[DEBUG] model1.FieldOfStudy{name=Informatics, students=[], id=2, type=S1}
[DEBUG] model1.Person{address=model1.Address#1, fName=John, sName=Smith, id=1, email=johnsnith@gmail.com}
[DEBUG] model1.FieldOfStudy{name=Informatics, students=[], id=1, type=S2}
[TRACE] Executing flush
[TRACE] Updating entity: [model1.Teacher#5]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@126f8f24 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title=** NOT SPECIFIED **, subject_id=** NOT SPECIFIED ** where teacher_id=** NOT SPECIFIED **]]
[TRACE] Dehydrating entity: [model1.Teacher#5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@126f8f24 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title='Proff', subject_id=2 where teacher_id=5]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@126f8f24 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title='Proff', subject_id=2 where teacher_id=5]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Updating entity: [model1.Teacher#6]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@781aff8b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title=** NOT SPECIFIED **, subject_id=** NOT SPECIFIED ** where teacher_id=** NOT SPECIFIED **]]
[TRACE] Dehydrating entity: [model1.Teacher#6]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@781aff8b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title='Assistance', subject_id=1 where teacher_id=6]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@781aff8b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@15eadd54: update Teachers set title='Assistance', subject_id=1 where teacher_id=6]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [47dbb27d-9dd5-4e3e-92af-791e0f0918d6]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4962b41e]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
