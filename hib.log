[TRACE] Starting createEntityManagerFactory for persistenceUnitName labPU
[TRACE] Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : labPU
[TRACE] Attempting to parse persistence.xml file : file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/META-INF/persistence.xml
[TRACE] JAR URL from URL Entry: file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/META-INF/persistence.xml >> file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/
[TRACE] Persistence unit name from persistence.xml : labPU
[DEBUG] Located and parsed 1 persistence units; checking each
[DEBUG] Checking persistence-unit [name=labPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [labPU]
[DEBUG] Persistence-unit [labPU] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[TRACE] Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
[DEBUG] PersistenceUnitInfo [
	name: labPU
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model1.Student
		model1.Subject
		model1.Teacher
		model1.FieldOfStudy
		model1.Test
		model1.Person
		model1.Address]
	Mapping files names []
	Properties [
		hibernate.ejb.cfgfile: hibernate.cfg.xml]
[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 5.4.18.Final
[DEBUG] HHH000206: hibernate.properties not found
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[DEBUG] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1522d8a0] into BootstrapContext; was [null]
[DEBUG] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@312ab28e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5644dc81]
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml,type=INPUT_STREAM)
[DEBUG] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/hibernate12
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at hiberApp.MainAppJPA.<clinit>(MainAppJPA.java:23)
[TRACE] Normalizing identifier quoting [hibernate12]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Import: model1.Person -> model1.Person
[TRACE] Import: Person -> model1.Person
[TRACE] Normalizing identifier quoting [Persons]
[DEBUG] Mapping class: model1.Person -> Persons
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Mapped property: id -> [person_id]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Mapped property: address -> [address_id]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Mapped property: fName -> [fName]
[TRACE] Normalizing identifier quoting [sName]
[DEBUG] Mapped property: sName -> [sName]
[TRACE] Normalizing identifier quoting [email]
[DEBUG] Mapped property: email -> [email]
[TRACE] Import: model1.Student -> model1.Student
[TRACE] Import: Student -> model1.Student
[TRACE] Normalizing identifier quoting [Students]
[DEBUG] Mapping joined-subclass: model1.Student -> Students
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students]
[TRACE] Normalizing identifier quoting [semester]
[DEBUG] Mapped property: semester -> [semester]
[TRACE] Normalizing identifier quoting [indexNo]
[DEBUG] Mapped property: indexNo -> [indexNo]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: fieldOfStudys -> [field_of_study_id]
[DEBUG] Mapped property: tests -> []
[TRACE] Import: model1.Teacher -> model1.Teacher
[TRACE] Import: Teacher -> model1.Teacher
[TRACE] Normalizing identifier quoting [Teachers]
[DEBUG] Mapping joined-subclass: model1.Teacher -> Teachers
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teachers]
[TRACE] Normalizing identifier quoting [title]
[DEBUG] Mapped property: title -> [title]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[TRACE] Import: model1.Test -> model1.Test
[TRACE] Import: Test -> model1.Test
[TRACE] Normalizing identifier quoting [Tests]
[DEBUG] Mapping class: model1.Test -> Tests
[TRACE] Normalizing identifier quoting [test_id]
[DEBUG] Mapped property: id -> [test_id]
[DEBUG] Forcing column [test_id] to be non-null as it is part of the primary key for table [tests]
[TRACE] Normalizing identifier quoting [grade]
[DEBUG] Mapped property: grade -> [grade]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Mapped property: date -> [date]
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Mapped property: student -> [student_id]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[TRACE] Import: model1.FieldOfStudy -> model1.FieldOfStudy
[TRACE] Import: FieldOfStudy -> model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [FieldOfStudies]
[DEBUG] Mapping class: model1.FieldOfStudy -> FieldOfStudies
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: id -> [field_of_study_id]
[DEBUG] Forcing column [field_of_study_id] to be non-null as it is part of the primary key for table [fieldofstudies]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Mapped property: type -> [type]
[TRACE] Import: model1.Address -> model1.Address
[TRACE] Import: Address -> model1.Address
[TRACE] Normalizing identifier quoting [Addresses]
[DEBUG] Mapping class: model1.Address -> Addresses
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Mapped property: id -> [address_id]
[DEBUG] Forcing column [address_id] to be non-null as it is part of the primary key for table [addresses]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Mapped property: country -> [country]
[TRACE] Normalizing identifier quoting [city]
[DEBUG] Mapped property: city -> [city]
[TRACE] Normalizing identifier quoting [postalCode]
[DEBUG] Mapped property: postalCode -> [postalCode]
[TRACE] Normalizing identifier quoting [street]
[DEBUG] Mapped property: street -> [street]
[TRACE] Import: model1.Subject -> model1.Subject
[TRACE] Import: Subject -> model1.Subject
[TRACE] Normalizing identifier quoting [Subjects]
[DEBUG] Mapping class: model1.Subject -> Subjects
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: id -> [subject_id]
[DEBUG] Forcing column [subject_id] to be non-null as it is part of the primary key for table [subjects]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[DEBUG] Mapped property: teachers -> []
[DEBUG] Mapped property: tests -> []
[DEBUG] Skipping annotated class processing of entity [model1.Test], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Person], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Address], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.FieldOfStudy], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Student], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Subject], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Teacher], as it has already been processed
[DEBUG] Mapping collection: model1.Student.tests -> Tests
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Student.tests
[DEBUG]    + table -> Students
[DEBUG]    + key -> student_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Mapping collection: model1.Subject.teachers -> Teachers
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.teachers
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Teacher
[DEBUG] Mapping collection: model1.Subject.tests -> Tests
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.tests
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\txw2-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\antlr-2.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\dom4j-2.1.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\stax-ex-1.8.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\c3p0-0.9.5.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\log4j-1.2.16.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-api-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\classmate-1.5.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-api-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\byte-buddy-1.10.10.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\FastInfoset-1.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jandex-2.1.3.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-runtime-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javassist-3.24.0-GA.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-log4j12-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-logging-3.3.2.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.activation-api-1.2.0.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mysql-connector-java-5.1.6.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-c3p0-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mchange-commons-java-0.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\istack-commons-runtime-3.0.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Warsaw, javax.persistence.jdbc.url=jdbc:mysql://localhost:6033/hibernate12, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=hiberApp.MainAppJPA, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\b___b, hibernate.c3p0.max_statements=10, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=12.0.2+10, user.name=Brijesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/hibernate12, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=labPU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\b___b\AppData\Local\Temp\, java.version=12.0.2, user.dir=C:\Users\b___b\Desktop\SEM_2\ORI\New, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@474c9131, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python38\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\;C:\Users\b___b\AppData\Local\Microsoft\WindowsApps;;C:\Users\b___b\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\b___b\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [grade], existing type = [org.hibernate.type.DoubleType@22ffa91a], incoming type = [org.hibernate.type.DoubleType@22ffa91a]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.LocalDateType@2002348], incoming type = [org.hibernate.type.LocalDateType@2002348]
[TRACE] Skipping duplicate registration of path [student], existing type = [org.hibernate.type.ManyToOneType(model1.Student)], incoming type = [org.hibernate.type.ManyToOneType(model1.Student)]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Student
[DEBUG] Not known whether passed class name [model1.Teacher] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Teacher
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@1d3ac898], incoming type = [org.hibernate.type.IntegerType@1d3ac898]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[TRACE] Skipping duplicate registration of path [country], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [postalCode], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [street], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@1d3ac898], incoming type = [org.hibernate.type.IntegerType@1d3ac898]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [teachers], existing type = [org.hibernate.type.SetType(model1.Subject.teachers)], incoming type = [org.hibernate.type.SetType(model1.Subject.teachers)]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Subject.tests)], incoming type = [org.hibernate.type.SetType(model1.Subject.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Static SQL for collection: model1.Student.tests
[DEBUG]  Row insert: update Tests set student_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set student_id=null where student_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set student_id=null where student_id=?
[DEBUG] Static SQL for collection: model1.Subject.teachers
[DEBUG]  Row insert: update Teachers set subject_id=? where teacher_id=?
[DEBUG]  Row update: update Teachers set  where teacher_id=?
[DEBUG]  Row delete: update Teachers set subject_id=null where subject_id=? and teacher_id=?
[DEBUG]  One-shot delete: update Teachers set subject_id=null where subject_id=?
[DEBUG] Static SQL for collection: model1.Subject.tests
[DEBUG]  Row insert: update Tests set subject_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set subject_id=null where subject_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set subject_id=null where subject_id=?
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model1.Test
[DEBUG]  Version select: select test_id from Tests where test_id =?
[DEBUG]  Snapshot select: select test_.test_id, test_.grade as grade2_6_, test_.date as date3_6_, test_.student_id as student_4_6_, test_.subject_id as subject_5_6_ from Tests test_ where test_.test_id=?
[DEBUG]  Insert 0: insert into Tests (grade, date, student_id, subject_id, test_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Tests set grade=?, date=?, student_id=?, subject_id=? where test_id=?
[DEBUG]  Delete 0: delete from Tests where test_id=?
[DEBUG]  Identity insert: insert into Tests (grade, date, student_id, subject_id) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@273a5a8a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@fb49fdf
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@fb49fdf
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3234474]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b9cb99]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@fb49fdf
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [NONE]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1665fa54]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d67f5eb
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d67f5eb
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f654cee]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1fd62b]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d67f5eb
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [READ]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static SQL for entity: model1.Person
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select person_.person_id, person_.address_id as address_2_2_, person_.fName as fname3_2_, person_.sName as sname4_2_, person_.email as email5_2_ from Persons person_ where person_.person_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b82e0f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27a09971
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27a09971
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6215366a]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46dcbeab]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d06f16f]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16736040]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ca61bf]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27a09971
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Person [NONE]: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687e6293]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6870c3c2
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6870c3c2
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb0a08c]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf386c]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4debbf0]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e06f7d]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6870c3c2
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Person [READ]: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.semester as semester2_3_0_, person0_1_.indexNo as indexno3_3_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_2_.title as title2_5_0_, person0_2_.subject_id as subject_3_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id where person0_.person_id=?
[DEBUG] Static SQL for entity: model1.Address
[DEBUG]  Version select: select address_id from Addresses where address_id =?
[DEBUG]  Snapshot select: select address_.address_id, address_.country as country2_0_, address_.city as city3_0_, address_.postalCode as postalco4_0_, address_.street as street5_0_ from Addresses address_ where address_.address_id=?
[DEBUG]  Insert 0: insert into Addresses (country, city, postalCode, street, address_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Addresses set country=?, city=?, postalCode=?, street=? where address_id=?
[DEBUG]  Delete 0: delete from Addresses where address_id=?
[DEBUG]  Identity insert: insert into Addresses (country, city, postalCode, street) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66a5755]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@771a7d53
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@771a7d53
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@771a7d53
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6d480c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e95595b
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e95595b
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e95595b
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static SQL for entity: model1.Student
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select student_.student_id, student_1_.address_id as address_2_2_, student_1_.fName as fname3_2_, student_1_.sName as sname4_2_, student_1_.email as email5_2_, student_.semester as semester2_3_, student_.indexNo as indexno3_3_, student_.field_of_study_id as field_of4_3_ from Students student_ inner join Persons student_1_ on student_.student_id=student_1_.person_id where student_.student_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Students (semester, indexNo, field_of_study_id, student_id) values (?, ?, ?, ?)
[DEBUG]  Update 1: update Students set semester=?, indexNo=?, field_of_study_id=? where student_id=?
[DEBUG]  Delete 1: delete from Students where student_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a917723]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e4579c7
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e4579c7
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796f632b]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d94a2dc]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cedee22]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b32539]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e4579c7
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Student [NONE]: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b47731f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c2ce52]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a19e]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60a7e509]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e13f304]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Student [READ]: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static SQL for entity: model1.FieldOfStudy
[DEBUG]  Version select: select field_of_study_id from FieldOfStudies where field_of_study_id =?
[DEBUG]  Snapshot select: select fieldofstu_.field_of_study_id, fieldofstu_.name as name2_1_, fieldofstu_.type as type3_1_ from FieldOfStudies fieldofstu_ where fieldofstu_.field_of_study_id=?
[DEBUG]  Insert 0: insert into FieldOfStudies (name, type, field_of_study_id) values (?, ?, ?)
[DEBUG]  Update 0: update FieldOfStudies set name=?, type=? where field_of_study_id=?
[DEBUG]  Delete 0: delete from FieldOfStudies where field_of_study_id=?
[DEBUG]  Identity insert: insert into FieldOfStudies (name, type) values (?, ?)
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787508ca]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d24420b
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d24420b
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d24420b
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [NONE]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274670b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ce2392
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ce2392
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ce2392
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [READ]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static SQL for entity: model1.Subject
[DEBUG]  Version select: select subject_id from Subjects where subject_id =?
[DEBUG]  Snapshot select: select subject_.subject_id, subject_.name as name2_4_ from Subjects subject_ where subject_.subject_id=?
[DEBUG]  Insert 0: insert into Subjects (name, subject_id) values (?, ?)
[DEBUG]  Update 0: update Subjects set name=? where subject_id=?
[DEBUG]  Delete 0: delete from Subjects where subject_id=?
[DEBUG]  Identity insert: insert into Subjects (name) values (?)
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d5279]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c067c0d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c067c0d
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d0b0cb9]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7b6639]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16ac5d35]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3965bdf9]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c067c0d
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [NONE]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0e00a8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1860f3be
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1860f3be
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cd15072]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cfa264]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3408f695]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6a0ea9]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1860f3be
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [READ]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static SQL for entity: model1.Teacher
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select teacher_.teacher_id, teacher_1_.address_id as address_2_2_, teacher_1_.fName as fname3_2_, teacher_1_.sName as sname4_2_, teacher_1_.email as email5_2_, teacher_.title as title2_5_, teacher_.subject_id as subject_3_5_ from Teachers teacher_ inner join Persons teacher_1_ on teacher_.teacher_id=teacher_1_.person_id where teacher_.teacher_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Teachers (title, subject_id, teacher_id) values (?, ?, ?)
[DEBUG]  Update 1: update Teachers set title=?, subject_id=? where teacher_id=?
[DEBUG]  Delete 1: delete from Teachers where teacher_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dde8976]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4887de2b
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4887de2b
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4825f0]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ac6b76]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4887de2b
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Teacher [NONE]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7980cf2c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f0020b1
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f0020b1
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759de304]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5649d11a]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f0020b1
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Teacher [READ]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[TRACE]  Starting root collection : model1.Student.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9c73fff]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cea1b8]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6025d790
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={student_id}) -> null
[TRACE]  Starting collection element graph : model1.Student.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4c0e426a
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[DEBUG] Property path deemed to be circular : student
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@713ec32d]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4c0e426a
[TRACE]  Finished collection element graph : model1.Student.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6025d790
[TRACE]  Finished root collection : model1.Student.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Student.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Student.tests, querySpaceUid=<gen:0>, path=[model1.Student.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Student.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=[model1.Student.tests].<elements>.subject)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Student.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {student_4_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Student.tests: select tests0_.student_id as student_4_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.student_id=?
[TRACE]  Starting root collection : model1.Subject.teachers
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45545e7a]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f674ac]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1da4b3f9
[TRACE]  Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.teachers
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@23cbbd07
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448b808a]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@23cbbd07
[TRACE]  Finished collection element graph : model1.Subject.teachers
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1da4b3f9
[TRACE]  Finished root collection : model1.Subject.teachers
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:0>, path=[model1.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:1>, path=[model1.Subject.teachers].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.Subject.teachers].<elements>.address)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_3_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Teacher)
                - SQL table alias mapping - teachers0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}

[DEBUG] Static select for collection model1.Subject.teachers: select teachers0_.subject_id as subject_3_5_0_, teachers0_.teacher_id as teacher_1_5_0_, teachers0_.teacher_id as person_i1_2_1_, teachers0_1_.address_id as address_2_2_1_, teachers0_1_.fName as fname3_2_1_, teachers0_1_.sName as sname4_2_1_, teachers0_1_.email as email5_2_1_, teachers0_.title as title2_5_1_, teachers0_.subject_id as subject_3_5_1_ from Teachers teachers0_ inner join Persons teachers0_1_ on teachers0_.teacher_id=teachers0_1_.person_id where teachers0_.subject_id=?
[TRACE]  Starting root collection : model1.Subject.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e62cfa3]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e190ed]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@383c3eb3
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@20ab76ee
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485caa8f]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@20ab76ee
[TRACE]  Finished collection element graph : model1.Subject.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@383c3eb3
[TRACE]  Finished root collection : model1.Subject.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.tests, querySpaceUid=<gen:0>, path=[model1.Subject.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Subject.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:2>, path=[model1.Subject.tests].<elements>.student)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {subject_5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Subject.tests: select tests0_.subject_id as subject_5_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.subject_id=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model1.Test]
[TRACE] Building identifier attribute [Test.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Test.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Test.grade]
[TRACE] Starting attribute metadata determination [grade]
[TRACE]     Determined member [public double model1.Test.getGrade()]
[TRACE]     Determined type [name=double, class=org.hibernate.type.DoubleType]
[TRACE] Building attribute [Test.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [public java.time.LocalDate model1.Test.getDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Test.student]
[TRACE] Starting attribute metadata determination [student]
[TRACE]     Determined member [public model1.Student model1.Test.getStudent()]
[TRACE]     Determined type [name=model1.Student, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Test.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Test.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Test]
[TRACE] Starting entity [model1.Person]
[TRACE] Building identifier attribute [Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Person.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Person.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [public model1.Address model1.Person.getAddress()]
[TRACE]     Determined type [name=model1.Address, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Person.fName]
[TRACE] Starting attribute metadata determination [fName]
[TRACE]     Determined member [public java.lang.String model1.Person.getfName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.sName]
[TRACE] Starting attribute metadata determination [sName]
[TRACE]     Determined member [public java.lang.String model1.Person.getsName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.email]
[TRACE] Starting attribute metadata determination [email]
[TRACE]     Determined member [public java.lang.String model1.Person.getEmail()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Person]
[TRACE] Starting entity [model1.Address]
[TRACE] Building identifier attribute [Address.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Address.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Address.country]
[TRACE] Starting attribute metadata determination [country]
[TRACE]     Determined member [public java.lang.String model1.Address.getCountry()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.city]
[TRACE] Starting attribute metadata determination [city]
[TRACE]     Determined member [public java.lang.String model1.Address.getCity()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.postalCode]
[TRACE] Starting attribute metadata determination [postalCode]
[TRACE]     Determined member [public java.lang.String model1.Address.getPostalCode()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.street]
[TRACE] Starting attribute metadata determination [street]
[TRACE]     Determined member [public java.lang.String model1.Address.getStreet()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Address]
[TRACE] Starting entity [model1.Student]
[TRACE] Building attribute [Student.semester]
[TRACE] Starting attribute metadata determination [semester]
[TRACE]     Determined member [public int model1.Student.getSemester()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Student.indexNo]
[TRACE] Starting attribute metadata determination [indexNo]
[TRACE]     Determined member [public java.lang.String model1.Student.getIndexNo()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Student.fieldOfStudys]
[TRACE] Starting attribute metadata determination [fieldOfStudys]
[TRACE]     Determined member [public model1.FieldOfStudy model1.Student.getFieldOfStudys()]
[TRACE]     Determined type [name=model1.FieldOfStudy, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Student.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Student.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Student]
[TRACE] Starting entity [model1.FieldOfStudy]
[TRACE] Building identifier attribute [FieldOfStudy.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.FieldOfStudy.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [FieldOfStudy.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [FieldOfStudy.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getType()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.FieldOfStudy]
[TRACE] Starting entity [model1.Subject]
[TRACE] Building identifier attribute [Subject.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Subject.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Subject.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.Subject.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Subject.teachers]
[TRACE] Starting attribute metadata determination [teachers]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTeachers()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.teachers), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Subject.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Subject]
[TRACE] Starting entity [model1.Teacher]
[TRACE] Building attribute [Teacher.title]
[TRACE] Starting attribute metadata determination [title]
[TRACE]     Determined member [public java.lang.String model1.Teacher.getTitle()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Teacher.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Teacher.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Teacher]
[TRACE] Normalizing identifier quoting [HT_Persons]
[TRACE] Normalizing identifier quoting [HT_Students]
[TRACE] Normalizing identifier quoting [HT_Teachers]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Rendering unquoted identifier [hibernate12] in lower case for use in DatabaseMetaData
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bdf61ad] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [country]
[TRACE] Rendering unquoted identifier [country] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [city]
[TRACE] Rendering unquoted identifier [city] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [postalCode]
[TRACE] Rendering unquoted identifier [postalCode] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [street]
[TRACE] Rendering unquoted identifier [street] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Addresses
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Rendering unquoted identifier [field_of_study_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [name]
[TRACE] Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [type]
[TRACE] Rendering unquoted identifier [type] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : FieldOfStudies
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Rendering unquoted identifier [person_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fName]
[TRACE] Rendering unquoted identifier [fName] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [sName]
[TRACE] Rendering unquoted identifier [sName] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [email]
[TRACE] Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Persons
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Rendering unquoted identifier [student_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [semester]
[TRACE] Rendering unquoted identifier [semester] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [indexNo]
[TRACE] Rendering unquoted identifier [indexNo] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Rendering unquoted identifier [field_of_study_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Students
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [name]
[TRACE] Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Subjects
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [teacher_id]
[TRACE] Rendering unquoted identifier [teacher_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [title]
[TRACE] Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Teachers
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [test_id]
[TRACE] Rendering unquoted identifier [test_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [grade]
[TRACE] Rendering unquoted identifier [grade] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [date]
[TRACE] Rendering unquoted identifier [date] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Rendering unquoted identifier [student_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Tests
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [addresses]
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Normalizing identifier quoting for object name [fk_person_address]
[TRACE] Rendering unquoted identifier [fk_person_address] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [fieldofstudies]
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [persons]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Normalizing identifier quoting for object name [fk_stu_per]
[TRACE] Rendering unquoted identifier [fk_stu_per] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_stu_fos]
[TRACE] Rendering unquoted identifier [fk_stu_fos] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [subjects]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [persons]
[TRACE] Normalizing identifier quoting for object name [teacher_id]
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Normalizing identifier quoting for object name [fk_tea_per]
[TRACE] Rendering unquoted identifier [fk_tea_per] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_tea_sub]
[TRACE] Rendering unquoted identifier [fk_tea_sub] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [subjects]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [students]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [fk_test_stu]
[TRACE] Rendering unquoted identifier [fk_test_stu] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_test_sub]
[TRACE] Rendering unquoted identifier [fk_test_sub] in lower case for use in DatabaseMetaData
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5cd96b41
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: 51d11de0-8904-4835-9581-0d07d73e5f46 (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Starting createEntityManagerFactory for persistenceUnitName labPU
[TRACE] Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : labPU
[TRACE] Attempting to parse persistence.xml file : file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/META-INF/persistence.xml
[TRACE] JAR URL from URL Entry: file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/META-INF/persistence.xml >> file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/
[TRACE] Persistence unit name from persistence.xml : labPU
[DEBUG] Located and parsed 1 persistence units; checking each
[DEBUG] Checking persistence-unit [name=labPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [labPU]
[DEBUG] Persistence-unit [labPU] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[TRACE] Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
[DEBUG] PersistenceUnitInfo [
	name: labPU
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/b___b/Desktop/SEM_2/ORI/New/out/production/New/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model1.Student
		model1.Subject
		model1.Teacher
		model1.FieldOfStudy
		model1.Test
		model1.Person
		model1.Address]
	Mapping files names []
	Properties [
		hibernate.ejb.cfgfile: hibernate.cfg.xml]
[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[DEBUG] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3a00b15d] into BootstrapContext; was [null]
[DEBUG] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@36ef1d65] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4be0a27d]
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [hibernate-mapping-3.0.dtd]
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml,type=INPUT_STREAM)
[DEBUG] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/hibernate12
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at util.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainAppJPA.showGroupBy(MainAppJPA.java:65)
	at hiberApp.MainAppJPA.main(MainAppJPA.java:29)
[TRACE] Normalizing identifier quoting [hibernate12]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Subject.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Person.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Test.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\FieldOfStudy.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Teacher.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Student.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New\xmlMaps\Address.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Import: model1.Subject -> model1.Subject
[TRACE] Import: Subject -> model1.Subject
[TRACE] Normalizing identifier quoting [Subjects]
[DEBUG] Mapping class: model1.Subject -> Subjects
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: id -> [subject_id]
[DEBUG] Forcing column [subject_id] to be non-null as it is part of the primary key for table [subjects]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[DEBUG] Mapped property: teachers -> []
[DEBUG] Mapped property: tests -> []
[TRACE] Import: model1.Person -> model1.Person
[TRACE] Import: Person -> model1.Person
[TRACE] Normalizing identifier quoting [Persons]
[DEBUG] Mapping class: model1.Person -> Persons
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Mapped property: id -> [person_id]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Mapped property: address -> [address_id]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Mapped property: fName -> [fName]
[TRACE] Normalizing identifier quoting [sName]
[DEBUG] Mapped property: sName -> [sName]
[TRACE] Normalizing identifier quoting [email]
[DEBUG] Mapped property: email -> [email]
[TRACE] Import: model1.Teacher -> model1.Teacher
[TRACE] Import: Teacher -> model1.Teacher
[TRACE] Normalizing identifier quoting [Teachers]
[DEBUG] Mapping joined-subclass: model1.Teacher -> Teachers
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teachers]
[TRACE] Normalizing identifier quoting [title]
[DEBUG] Mapped property: title -> [title]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[TRACE] Import: model1.Student -> model1.Student
[TRACE] Import: Student -> model1.Student
[TRACE] Normalizing identifier quoting [Students]
[DEBUG] Mapping joined-subclass: model1.Student -> Students
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students]
[TRACE] Normalizing identifier quoting [semester]
[DEBUG] Mapped property: semester -> [semester]
[TRACE] Normalizing identifier quoting [indexNo]
[DEBUG] Mapped property: indexNo -> [indexNo]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: fieldOfStudys -> [field_of_study_id]
[DEBUG] Mapped property: tests -> []
[TRACE] Import: model1.Test -> model1.Test
[TRACE] Import: Test -> model1.Test
[TRACE] Normalizing identifier quoting [Tests]
[DEBUG] Mapping class: model1.Test -> Tests
[TRACE] Normalizing identifier quoting [test_id]
[DEBUG] Mapped property: id -> [test_id]
[DEBUG] Forcing column [test_id] to be non-null as it is part of the primary key for table [tests]
[TRACE] Normalizing identifier quoting [grade]
[DEBUG] Mapped property: grade -> [grade]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Mapped property: date -> [date]
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Mapped property: student -> [student_id]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Mapped property: subject -> [subject_id]
[TRACE] Import: model1.FieldOfStudy -> model1.FieldOfStudy
[TRACE] Import: FieldOfStudy -> model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [FieldOfStudies]
[DEBUG] Mapping class: model1.FieldOfStudy -> FieldOfStudies
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Mapped property: id -> [field_of_study_id]
[DEBUG] Forcing column [field_of_study_id] to be non-null as it is part of the primary key for table [fieldofstudies]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Mapped property: type -> [type]
[TRACE] Import: model1.Address -> model1.Address
[TRACE] Import: Address -> model1.Address
[TRACE] Normalizing identifier quoting [Addresses]
[DEBUG] Mapping class: model1.Address -> Addresses
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Mapped property: id -> [address_id]
[DEBUG] Forcing column [address_id] to be non-null as it is part of the primary key for table [addresses]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Mapped property: country -> [country]
[TRACE] Normalizing identifier quoting [city]
[DEBUG] Mapped property: city -> [city]
[TRACE] Normalizing identifier quoting [postalCode]
[DEBUG] Mapped property: postalCode -> [postalCode]
[TRACE] Normalizing identifier quoting [street]
[DEBUG] Mapped property: street -> [street]
[DEBUG] Skipping annotated class processing of entity [model1.Test], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Person], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Address], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.FieldOfStudy], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Student], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Subject], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model1.Teacher], as it has already been processed
[DEBUG] Mapping collection: model1.Subject.teachers -> Teachers
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.teachers
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Teacher
[DEBUG] Mapping collection: model1.Subject.tests -> Tests
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Subject.tests
[DEBUG]    + table -> Subjects
[DEBUG]    + key -> subject_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Mapping collection: model1.Student.tests -> Tests
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Binding [ONE_TO_MANY] element type for a [SET]
[DEBUG] Mapped collection : model1.Student.tests
[DEBUG]    + table -> Students
[DEBUG]    + key -> student_id
[DEBUG]    + one-to-many -> model1.Test
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=12, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\txw2-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\antlr-2.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\dom4j-2.1.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\stax-ex-1.8.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\c3p0-0.9.5.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\log4j-1.2.16.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-api-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\classmate-1.5.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-api-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\byte-buddy-1.10.10.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\FastInfoset-1.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jandex-2.1.3.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-runtime-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javassist-3.24.0-GA.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-log4j12-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-logging-3.3.2.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.activation-api-1.2.0.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mysql-connector-java-5.1.6.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-c3p0-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mchange-commons-java-0.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\istack-commons-runtime-3.0.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Warsaw, javax.persistence.jdbc.url=jdbc:mysql://localhost:6033/hibernate12, java.vm.specification.version=12, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.2\bin, sun.java.command=hiberApp.MainAppJPA, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\b___b, hibernate.c3p0.max_statements=10, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\Java\jdk-12.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=12.0.2+10, user.name=Brijesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/hibernate12, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=labPU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\b___b\AppData\Local\Temp\, java.version=12.0.2, user.dir=C:\Users\b___b\Desktop\SEM_2\ORI\New, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@721d5b74, java.library.path=C:\Program Files\Java\jdk-12.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python38\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\;C:\Users\b___b\AppData\Local\Microsoft\WindowsApps;;C:\Users\b___b\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\b___b\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA 2020.3\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.2+10, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=56.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [grade], existing type = [org.hibernate.type.DoubleType@22ffa91a], incoming type = [org.hibernate.type.DoubleType@22ffa91a]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.LocalDateType@2002348], incoming type = [org.hibernate.type.LocalDateType@2002348]
[TRACE] Skipping duplicate registration of path [student], existing type = [org.hibernate.type.ManyToOneType(model1.Student)], incoming type = [org.hibernate.type.ManyToOneType(model1.Student)]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Teacher] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Teacher
[DEBUG] Not known whether passed class name [model1.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Student
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@1d3ac898], incoming type = [org.hibernate.type.IntegerType@1d3ac898]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[TRACE] Skipping duplicate registration of path [country], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [postalCode], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [street], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@1d3ac898], incoming type = [org.hibernate.type.IntegerType@1d3ac898]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [teachers], existing type = [org.hibernate.type.SetType(model1.Subject.teachers)], incoming type = [org.hibernate.type.SetType(model1.Subject.teachers)]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Subject.tests)], incoming type = [org.hibernate.type.SetType(model1.Subject.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@340b9973], incoming type = [org.hibernate.type.StringType@340b9973]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@59d2400d], incoming type = [org.hibernate.type.LongType@59d2400d]
[DEBUG] Static SQL for collection: model1.Student.tests
[DEBUG]  Row insert: update Tests set student_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set student_id=null where student_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set student_id=null where student_id=?
[DEBUG] Static SQL for collection: model1.Subject.teachers
[DEBUG]  Row insert: update Teachers set subject_id=? where teacher_id=?
[DEBUG]  Row update: update Teachers set  where teacher_id=?
[DEBUG]  Row delete: update Teachers set subject_id=null where subject_id=? and teacher_id=?
[DEBUG]  One-shot delete: update Teachers set subject_id=null where subject_id=?
[DEBUG] Static SQL for collection: model1.Subject.tests
[DEBUG]  Row insert: update Tests set subject_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set subject_id=null where subject_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set subject_id=null where subject_id=?
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model1.Test
[DEBUG]  Version select: select test_id from Tests where test_id =?
[DEBUG]  Snapshot select: select test_.test_id, test_.grade as grade2_6_, test_.date as date3_6_, test_.student_id as student_4_6_, test_.subject_id as subject_5_6_ from Tests test_ where test_.test_id=?
[DEBUG]  Insert 0: insert into Tests (grade, date, student_id, subject_id, test_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Tests set grade=?, date=?, student_id=?, subject_id=? where test_id=?
[DEBUG]  Delete 0: delete from Tests where test_id=?
[DEBUG]  Identity insert: insert into Tests (grade, date, student_id, subject_id) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61e86192
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61e86192
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34330f77]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1320e68a]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61e86192
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [NONE]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b033eac]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69c532af
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69c532af
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a1d057]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a16adf]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69c532af
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [READ]: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.grade as grade2_6_0_, test0_.date as date3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static SQL for entity: model1.Person
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select person_.person_id, person_.address_id as address_2_2_, person_.fName as fname3_2_, person_.sName as sname4_2_, person_.email as email5_2_ from Persons person_ where person_.person_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385d819]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4315c28c
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4315c28c
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8fd91d1]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d0f583]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb8bad0]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d40609]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76437e9b]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4315c28c
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Person [NONE]: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.title as title2_5_0_, person0_1_.subject_id as subject_3_5_0_, person0_2_.semester as semester2_3_0_, person0_2_.indexNo as indexno3_3_0_, person0_2_.field_of_study_id as field_of4_3_0_, case when person0_1_.teacher_id is not null then 1 when person0_2_.student_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Teachers person0_1_ on person0_.person_id=person0_1_.teacher_id left outer join Students person0_2_ on person0_.person_id=person0_2_.student_id where person0_.person_id=?
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236ae13d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@193eb1ba
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@193eb1ba
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be818da]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46320c9a]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32256e68]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353f472a]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@193eb1ba
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:5>, path=model1.Person.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Person [READ]: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.title as title2_5_0_, person0_1_.subject_id as subject_3_5_0_, person0_2_.semester as semester2_3_0_, person0_2_.indexNo as indexno3_3_0_, person0_2_.field_of_study_id as field_of4_3_0_, case when person0_1_.teacher_id is not null then 1 when person0_2_.student_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Teachers person0_1_ on person0_.person_id=person0_1_.teacher_id left outer join Students person0_2_ on person0_.person_id=person0_2_.student_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.title as title2_5_0_, person0_1_.subject_id as subject_3_5_0_, person0_2_.semester as semester2_3_0_, person0_2_.indexNo as indexno3_3_0_, person0_2_.field_of_study_id as field_of4_3_0_, case when person0_1_.teacher_id is not null then 1 when person0_2_.student_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Teachers person0_1_ on person0_.person_id=person0_1_.teacher_id left outer join Students person0_2_ on person0_.person_id=person0_2_.student_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Person: select person0_.person_id as person_i1_2_0_, person0_.address_id as address_2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_.email as email5_2_0_, person0_1_.title as title2_5_0_, person0_1_.subject_id as subject_3_5_0_, person0_2_.semester as semester2_3_0_, person0_2_.indexNo as indexno3_3_0_, person0_2_.field_of_study_id as field_of4_3_0_, case when person0_1_.teacher_id is not null then 1 when person0_2_.student_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_ from Persons person0_ left outer join Teachers person0_1_ on person0_.person_id=person0_1_.teacher_id left outer join Students person0_2_ on person0_.person_id=person0_2_.student_id where person0_.person_id=?
[DEBUG] Static SQL for entity: model1.Address
[DEBUG]  Version select: select address_id from Addresses where address_id =?
[DEBUG]  Snapshot select: select address_.address_id, address_.country as country2_0_, address_.city as city3_0_, address_.postalCode as postalco4_0_, address_.street as street5_0_ from Addresses address_ where address_.address_id=?
[DEBUG]  Insert 0: insert into Addresses (country, city, postalCode, street, address_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Addresses set country=?, city=?, postalCode=?, street=? where address_id=?
[DEBUG]  Delete 0: delete from Addresses where address_id=?
[DEBUG]  Identity insert: insert into Addresses (country, city, postalCode, street) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63bfdbcb]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af0affa
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af0affa
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7af0affa
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71560f51]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1f1046
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1f1046
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1f1046
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

[DEBUG] Static select for entity model1.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.country as country2_0_0_, address0_.city as city3_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static SQL for entity: model1.Student
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select student_.student_id, student_1_.address_id as address_2_2_, student_1_.fName as fname3_2_, student_1_.sName as sname4_2_, student_1_.email as email5_2_, student_.semester as semester2_3_, student_.indexNo as indexno3_3_, student_.field_of_study_id as field_of4_3_ from Students student_ inner join Persons student_1_ on student_.student_id=student_1_.person_id where student_.student_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Students (semester, indexNo, field_of_study_id, student_id) values (?, ?, ?, ?)
[DEBUG]  Update 1: update Students set semester=?, indexNo=?, field_of_study_id=? where student_id=?
[DEBUG]  Delete 1: delete from Students where student_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23e3f5cd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c931134
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c931134
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7eb170]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b251fb9]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67d4c48d]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@230a73f2]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c931134
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Student [NONE]: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b97b3d2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@383cb5ce
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@383cb5ce
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798deee8]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f97bc14]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d8f4ed]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@383cb5ce
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:2>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:3>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Student [READ]: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Student: select student0_.student_id as person_i1_2_0_, student0_1_.address_id as address_2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_1_.email as email5_2_0_, student0_.semester as semester2_3_0_, student0_.indexNo as indexno3_3_0_, student0_.field_of_study_id as field_of4_3_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id where student0_.student_id=?
[DEBUG] Static SQL for entity: model1.FieldOfStudy
[DEBUG]  Version select: select field_of_study_id from FieldOfStudies where field_of_study_id =?
[DEBUG]  Snapshot select: select fieldofstu_.field_of_study_id, fieldofstu_.name as name2_1_, fieldofstu_.type as type3_1_ from FieldOfStudies fieldofstu_ where fieldofstu_.field_of_study_id=?
[DEBUG]  Insert 0: insert into FieldOfStudies (name, type, field_of_study_id) values (?, ?, ?)
[DEBUG]  Update 0: update FieldOfStudies set name=?, type=? where field_of_study_id=?
[DEBUG]  Delete 0: delete from FieldOfStudies where field_of_study_id=?
[DEBUG]  Identity insert: insert into FieldOfStudies (name, type) values (?, ?)
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3434a4f0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79afa369
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79afa369
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79afa369
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [NONE]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9ac754]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e002356
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e002356
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e002356
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [READ]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static SQL for entity: model1.Subject
[DEBUG]  Version select: select subject_id from Subjects where subject_id =?
[DEBUG]  Snapshot select: select subject_.subject_id, subject_.name as name2_4_ from Subjects subject_ where subject_.subject_id=?
[DEBUG]  Insert 0: insert into Subjects (name, subject_id) values (?, ?)
[DEBUG]  Update 0: update Subjects set name=? where subject_id=?
[DEBUG]  Delete 0: delete from Subjects where subject_id=?
[DEBUG]  Identity insert: insert into Subjects (name) values (?)
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f820f42]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b325930
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b325930
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@261de205]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3fc42f]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b325930
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [NONE]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ce12fbb
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ce12fbb
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4525e9e8]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@443a53df]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c33da7a]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69aabcb0]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ce12fbb
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [READ]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static SQL for entity: model1.Teacher
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select teacher_.teacher_id, teacher_1_.address_id as address_2_2_, teacher_1_.fName as fname3_2_, teacher_1_.sName as sname4_2_, teacher_1_.email as email5_2_, teacher_.title as title2_5_, teacher_.subject_id as subject_3_5_ from Teachers teacher_ inner join Persons teacher_1_ on teacher_.teacher_id=teacher_1_.person_id where teacher_.teacher_id=?
[DEBUG]  Insert 0: insert into Persons (address_id, fName, sName, email, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set address_id=?, fName=?, sName=?, email=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Teachers (title, subject_id, teacher_id) values (?, ?, ?)
[DEBUG]  Update 1: update Teachers set title=?, subject_id=? where teacher_id=?
[DEBUG]  Delete 1: delete from Teachers where teacher_id=?
[DEBUG]  Identity insert: insert into Persons (address_id, fName, sName, email) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@15986dd5
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@15986dd5
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678a9516]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf9ea6b]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@15986dd5
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Teacher [NONE]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d352de0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d352de0
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e243175]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1a3468]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d352de0
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Teacher.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}

[DEBUG] Static select for entity model1.Teacher [READ]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.address_id as address_2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_1_.email as email5_2_0_, teacher0_.title as title2_5_0_, teacher0_.subject_id as subject_3_5_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id where teacher0_.teacher_id=?
[TRACE]  Starting root collection : model1.Student.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59d0cdb6]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dfeb141]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@629e8212
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={student_id}) -> null
[TRACE]  Starting collection element graph : model1.Student.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@498c535d
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[DEBUG] Property path deemed to be circular : student
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ee9aa7]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@498c535d
[TRACE]  Finished collection element graph : model1.Student.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@629e8212
[TRACE]  Finished root collection : model1.Student.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Student.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Student.tests, querySpaceUid=<gen:0>, path=[model1.Student.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Student.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=[model1.Student.tests].<elements>.subject)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Student.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {student_4_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Student.tests: select tests0_.student_id as student_4_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.student_id=?
[TRACE]  Starting root collection : model1.Subject.teachers
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e424582]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58dad04a]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@73e776b7
[TRACE]  Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.teachers
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@113ee1ce
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0cc83e]
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@113ee1ce
[TRACE]  Finished collection element graph : model1.Subject.teachers
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@73e776b7
[TRACE]  Finished root collection : model1.Subject.teachers
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:0>, path=[model1.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:1>, path=[model1.Subject.teachers].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.Subject.teachers].<elements>.address)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_3_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Teacher)
                - SQL table alias mapping - teachers0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}

[DEBUG] Static select for collection model1.Subject.teachers: select teachers0_.subject_id as subject_3_5_0_, teachers0_.teacher_id as teacher_1_5_0_, teachers0_.teacher_id as person_i1_2_1_, teachers0_1_.address_id as address_2_2_1_, teachers0_1_.fName as fname3_2_1_, teachers0_1_.sName as sname4_2_1_, teachers0_1_.email as email5_2_1_, teachers0_.title as title2_5_1_, teachers0_.subject_id as subject_3_5_1_ from Teachers teachers0_ inner join Persons teachers0_1_ on teachers0_.teacher_id=teachers0_1_.person_id where teachers0_.subject_id=?
[TRACE]  Starting root collection : model1.Subject.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43da0955]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc09d57]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6d963d70
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@467045c4
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55736cfe]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@467045c4
[TRACE]  Finished collection element graph : model1.Subject.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@6d963d70
[TRACE]  Finished root collection : model1.Subject.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.tests, querySpaceUid=<gen:0>, path=[model1.Subject.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Subject.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:2>, path=[model1.Subject.tests].<elements>.student)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {subject_5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Subject.tests: select tests0_.subject_id as subject_5_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.grade as grade2_6_1_, tests0_.date as date3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.subject_id=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model1.Test]
[TRACE] Building identifier attribute [Test.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Test.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Test.grade]
[TRACE] Starting attribute metadata determination [grade]
[TRACE]     Determined member [public double model1.Test.getGrade()]
[TRACE]     Determined type [name=double, class=org.hibernate.type.DoubleType]
[TRACE] Building attribute [Test.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [public java.time.LocalDate model1.Test.getDate()]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Test.student]
[TRACE] Starting attribute metadata determination [student]
[TRACE]     Determined member [public model1.Student model1.Test.getStudent()]
[TRACE]     Determined type [name=model1.Student, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Test.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Test.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Test]
[TRACE] Starting entity [model1.Person]
[TRACE] Building identifier attribute [Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Person.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Person.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [public model1.Address model1.Person.getAddress()]
[TRACE]     Determined type [name=model1.Address, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Person.fName]
[TRACE] Starting attribute metadata determination [fName]
[TRACE]     Determined member [public java.lang.String model1.Person.getfName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.sName]
[TRACE] Starting attribute metadata determination [sName]
[TRACE]     Determined member [public java.lang.String model1.Person.getsName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.email]
[TRACE] Starting attribute metadata determination [email]
[TRACE]     Determined member [public java.lang.String model1.Person.getEmail()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Person]
[TRACE] Starting entity [model1.Address]
[TRACE] Building identifier attribute [Address.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Address.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Address.country]
[TRACE] Starting attribute metadata determination [country]
[TRACE]     Determined member [public java.lang.String model1.Address.getCountry()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.city]
[TRACE] Starting attribute metadata determination [city]
[TRACE]     Determined member [public java.lang.String model1.Address.getCity()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.postalCode]
[TRACE] Starting attribute metadata determination [postalCode]
[TRACE]     Determined member [public java.lang.String model1.Address.getPostalCode()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.street]
[TRACE] Starting attribute metadata determination [street]
[TRACE]     Determined member [public java.lang.String model1.Address.getStreet()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Address]
[TRACE] Starting entity [model1.Student]
[TRACE] Building attribute [Student.semester]
[TRACE] Starting attribute metadata determination [semester]
[TRACE]     Determined member [public int model1.Student.getSemester()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Student.indexNo]
[TRACE] Starting attribute metadata determination [indexNo]
[TRACE]     Determined member [public java.lang.String model1.Student.getIndexNo()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Student.fieldOfStudys]
[TRACE] Starting attribute metadata determination [fieldOfStudys]
[TRACE]     Determined member [public model1.FieldOfStudy model1.Student.getFieldOfStudys()]
[TRACE]     Determined type [name=model1.FieldOfStudy, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Student.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Student.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Student]
[TRACE] Starting entity [model1.FieldOfStudy]
[TRACE] Building identifier attribute [FieldOfStudy.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.FieldOfStudy.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [FieldOfStudy.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [FieldOfStudy.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [public java.lang.String model1.FieldOfStudy.getType()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.FieldOfStudy]
[TRACE] Starting entity [model1.Subject]
[TRACE] Building identifier attribute [Subject.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public java.lang.Long model1.Subject.getId()]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Subject.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model1.Subject.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Subject.teachers]
[TRACE] Starting attribute metadata determination [teachers]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTeachers()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.teachers), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Subject.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [public java.util.Set model1.Subject.getTests()]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Subject]
[TRACE] Starting entity [model1.Teacher]
[TRACE] Building attribute [Teacher.title]
[TRACE] Starting attribute metadata determination [title]
[TRACE]     Determined member [public java.lang.String model1.Teacher.getTitle()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Teacher.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [public model1.Subject model1.Teacher.getSubject()]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Teacher]
[TRACE] Normalizing identifier quoting [HT_Persons]
[TRACE] Normalizing identifier quoting [HT_Students]
[TRACE] Normalizing identifier quoting [HT_Teachers]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Rendering unquoted identifier [hibernate12] in lower case for use in DatabaseMetaData
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2a87ba34] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [country]
[TRACE] Rendering unquoted identifier [country] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [city]
[TRACE] Rendering unquoted identifier [city] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [postalCode]
[TRACE] Rendering unquoted identifier [postalCode] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [street]
[TRACE] Rendering unquoted identifier [street] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Addresses
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Rendering unquoted identifier [field_of_study_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [name]
[TRACE] Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [type]
[TRACE] Rendering unquoted identifier [type] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : FieldOfStudies
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Rendering unquoted identifier [person_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fName]
[TRACE] Rendering unquoted identifier [fName] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [sName]
[TRACE] Rendering unquoted identifier [sName] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [email]
[TRACE] Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Persons
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Rendering unquoted identifier [student_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [semester]
[TRACE] Rendering unquoted identifier [semester] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [indexNo]
[TRACE] Rendering unquoted identifier [indexNo] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Rendering unquoted identifier [field_of_study_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Students
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [name]
[TRACE] Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Subjects
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [teacher_id]
[TRACE] Rendering unquoted identifier [teacher_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [title]
[TRACE] Rendering unquoted identifier [title] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Teachers
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [test_id]
[TRACE] Rendering unquoted identifier [test_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [grade]
[TRACE] Rendering unquoted identifier [grade] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [date]
[TRACE] Rendering unquoted identifier [date] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Rendering unquoted identifier [student_id] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Rendering unquoted identifier [subject_id] in lower case for use in DatabaseMetaData
[DEBUG] No alter strings for table : Tests
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Addresses]
[TRACE] Rendering unquoted identifier [Addresses] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [FieldOfStudies]
[TRACE] Rendering unquoted identifier [FieldOfStudies] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Persons]
[TRACE] Rendering unquoted identifier [Persons] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [addresses]
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Normalizing identifier quoting for object name [address_id]
[TRACE] Normalizing identifier quoting for object name [fk_person_address]
[TRACE] Rendering unquoted identifier [fk_person_address] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Students]
[TRACE] Rendering unquoted identifier [Students] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [fieldofstudies]
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Normalizing identifier quoting for object name [field_of_study_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [persons]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Normalizing identifier quoting for object name [fk_stu_per]
[TRACE] Rendering unquoted identifier [fk_stu_per] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_stu_fos]
[TRACE] Rendering unquoted identifier [fk_stu_fos] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Subjects]
[TRACE] Rendering unquoted identifier [Subjects] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Teachers]
[TRACE] Rendering unquoted identifier [Teachers] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [subjects]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [persons]
[TRACE] Normalizing identifier quoting for object name [teacher_id]
[TRACE] Normalizing identifier quoting for object name [person_id]
[TRACE] Normalizing identifier quoting for object name [fk_tea_per]
[TRACE] Rendering unquoted identifier [fk_tea_per] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_tea_sub]
[TRACE] Rendering unquoted identifier [fk_tea_sub] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [Tests]
[TRACE] Rendering unquoted identifier [Tests] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [subjects]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [subject_id]
[TRACE] Normalizing identifier quoting for object name [hibernate12]
[TRACE] Normalizing identifier quoting for object name [students]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [student_id]
[TRACE] Normalizing identifier quoting for object name [fk_test_stu]
[TRACE] Rendering unquoted identifier [fk_test_stu] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [fk_test_sub]
[TRACE] Rendering unquoted identifier [fk_test_sub] in lower case for use in DatabaseMetaData
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: e239ac8d-80d7-4441-87ba-434e5b130ccb (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Opened Session [873d43b9-21da-435c-b019-5ee764208f54] at timestamp: 1607022582195
[DEBUG] Rendered criteria query -> select count(generatedAlias0.id), generatedAlias0.student from Test as generatedAlias0 group by generatedAlias0.student
[TRACE] Unable to locate HQL query plan in cache; generating (select count(generatedAlias0.id), generatedAlias0.student from Test as generatedAlias0 group by generatedAlias0.student)
[TRACE] Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
[TRACE] Located HQL query plan in cache (select count(generatedAlias0.id), generatedAlias0.student from Test as generatedAlias0 group by generatedAlias0.student)
[TRACE] Find: select count(generatedAlias0.id), generatedAlias0.student from Test as generatedAlias0 group by generatedAlias0.student
[TRACE] Named parameters: {}
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18ffca6c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@310e6840: select count(test0_.test_id) as col_0_0_, test0_.student_id as col_1_0_, student1_.student_id as person_i1_2_, student1_1_.address_id as address_2_2_, student1_1_.fName as fname3_2_, student1_1_.sName as sname4_2_, student1_1_.email as email5_2_, student1_.semester as semester2_3_, student1_.indexNo as indexno3_3_, student1_.field_of_study_id as field_of4_3_ from Tests test0_ inner join Students student1_ on test0_.student_id=student1_.student_id inner join Persons student1_1_ on student1_.student_id=student1_1_.person_id group by test0_.student_id]]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18ffca6c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@310e6840: select count(test0_.test_id) as col_0_0_, test0_.student_id as col_1_0_, student1_.student_id as person_i1_2_, student1_1_.address_id as address_2_2_, student1_1_.fName as fname3_2_, student1_1_.sName as sname4_2_, student1_1_.email as email5_2_, student1_.semester as semester2_3_, student1_.indexNo as indexno3_3_, student1_.field_of_study_id as field_of4_3_ from Tests test0_ inner join Students student1_ on test0_.student_id=student1_.student_id inner join Persons student1_1_ on student1_.student_id=student1_1_.person_id group by test0_.student_id]]
[TRACE] Bound [1] parameters total
[DEBUG] could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: 'hibernate12.student1_.student_id' isn't in GROUP BY
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.Util.getInstance(Util.java:381)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1030)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1936)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2060)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2542)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1734)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1885)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2311)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2064)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2026)
	at org.hibernate.loader.Loader.doQuery(Loader.java:951)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:352)
	at org.hibernate.loader.Loader.doList(Loader.java:2857)
	at org.hibernate.loader.Loader.doList(Loader.java:2839)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2671)
	at org.hibernate.loader.Loader.list(Loader.java:2666)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1412)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1565)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at hiberApp.MainAppJPA.showGroupBy(MainAppJPA.java:72)
	at hiberApp.MainAppJPA.main(MainAppJPA.java:29)
[WARN ] SQL Error: 1055, SQLState: 42000
[ERROR] 'hibernate12.student1_.student_id' isn't in GROUP BY
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18ffca6c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@310e6840: select count(test0_.test_id) as col_0_0_, test0_.student_id as col_1_0_, student1_.student_id as person_i1_2_, student1_1_.address_id as address_2_2_, student1_1_.fName as fname3_2_, student1_1_.sName as sname4_2_, student1_1_.email as email5_2_, student1_.semester as semester2_3_, student1_.indexNo as indexno3_3_, student1_.field_of_study_id as field_of4_3_ from Tests test0_ inner join Students student1_ on test0_.student_id=student1_.student_id inner join Persons student1_1_ on student1_.student_id=student1_1_.person_id group by test0_.student_id]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18ffca6c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@310e6840: select count(test0_.test_id) as col_0_0_, test0_.student_id as col_1_0_, student1_.student_id as person_i1_2_, student1_1_.address_id as address_2_2_, student1_1_.fName as fname3_2_, student1_1_.sName as sname4_2_, student1_1_.email as email5_2_, student1_.semester as semester2_3_, student1_.indexNo as indexno3_3_, student1_.field_of_study_id as field_of4_3_ from Tests test0_ inner join Students student1_ on test0_.student_id=student1_.student_id inner join Persons student1_1_ on student1_.student_id=student1_1_.person_id group by test0_.student_id]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
