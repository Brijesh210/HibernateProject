[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 5.4.18.Final
[DEBUG] HHH000206: hibernate.properties not found
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] Building session factory using provided StandardServiceRegistry
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/hiberlab12
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at util.HiberUtil.getANNSessionFactory(HiberUtil.java:84)
	at util.HiberUtil.getSessionFactory(HiberUtil.java:46)
	at hiberApp.MainApp.<clinit>(MainApp.java:15)
[TRACE] Normalizing identifier quoting [hiberlab12]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] Binding entity from annotated class: model1.Address
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Address
[TRACE] Import: Address -> model1.Address
[TRACE] Import: model1.Address -> model1.Address
[TRACE] Normalizing identifier quoting [Addresses]
[TRACE] Normalizing identifier quoting [Addresses]
[DEBUG] Bind entity model1.Address on table Addresses
[TRACE] Processing annotations of model1.Address.id
[TRACE] Normalizing identifier quoting [address_id]
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Address:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [address_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(address_id)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model1.Address.city
[TRACE] Normalizing identifier quoting [city]
[TRACE] Normalizing identifier quoting [city]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property city with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Address:city]
[DEBUG] building SimpleValue for city
[TRACE] Normalizing identifier quoting [city]
[TRACE] Normalizing identifier quoting [city]
[TRACE] Normalizing identifier quoting [city]
[DEBUG] Building property city
[TRACE] Cascading city with null
[TRACE] Processing annotations of model1.Address.country
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property country with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Address:country]
[DEBUG] building SimpleValue for country
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Building property country
[TRACE] Cascading country with null
[TRACE] Processing annotations of model1.Address.person
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[TRACE] Normalizing identifier quoting [person]
[TRACE] Normalizing identifier quoting [person]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=person, insertable=true, updatable=true, unique=false}
[TRACE] Fetching person with JOIN
[DEBUG] Building property person
[TRACE] Cascading person with none
[TRACE] Processing annotations of model1.Address.postalCode
[TRACE] Normalizing identifier quoting [postalCode]
[TRACE] Normalizing identifier quoting [postalCode]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=postalCode, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property postalCode with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Address:postalCode]
[DEBUG] building SimpleValue for postalCode
[TRACE] Normalizing identifier quoting [postalCode]
[TRACE] Normalizing identifier quoting [postalCode]
[TRACE] Normalizing identifier quoting [postalCode]
[DEBUG] Building property postalCode
[TRACE] Cascading postalCode with null
[TRACE] Processing annotations of model1.Address.street
[TRACE] Normalizing identifier quoting [street]
[TRACE] Normalizing identifier quoting [street]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Addresses), mappingColumn=street, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property street with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Address:street]
[DEBUG] building SimpleValue for street
[TRACE] Normalizing identifier quoting [street]
[TRACE] Normalizing identifier quoting [street]
[TRACE] Normalizing identifier quoting [street]
[DEBUG] Building property street
[TRACE] Cascading street with null
[DEBUG] Binding entity from annotated class: model1.Subject
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Subject
[TRACE] Import: Subject -> model1.Subject
[TRACE] Import: model1.Subject -> model1.Subject
[TRACE] Normalizing identifier quoting [Subjects]
[TRACE] Normalizing identifier quoting [Subjects]
[DEBUG] Bind entity model1.Subject on table Subjects
[TRACE] Processing annotations of model1.Subject.id
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=subject_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Subject:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(subject_id)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model1.Subject.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Subject:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model1.Subject.teachers
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[TRACE] Normalizing identifier quoting [teachers]
[TRACE] Normalizing identifier quoting [teachers]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=teachers, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [teachers_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=teachers_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [teachers_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='teachers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[DEBUG] Collection role: model1.Subject.teachers
[DEBUG] Building property teachers
[TRACE] Cascading teachers with none
[TRACE] Processing annotations of model1.Subject.tests
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[TRACE] Normalizing identifier quoting [tests]
[TRACE] Normalizing identifier quoting [tests]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=tests, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tests_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Subjects), mappingColumn=tests_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tests_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='tests_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subject'}
[DEBUG] Collection role: model1.Subject.tests
[DEBUG] Building property tests
[TRACE] Cascading tests with none
[DEBUG] Binding entity from annotated class: model1.Person
[DEBUG] Ignoring implicit (absent) DiscriminatorColumn
[DEBUG] Import with entity name Person
[TRACE] Import: Person -> model1.Person
[TRACE] Import: model1.Person -> model1.Person
[TRACE] Normalizing identifier quoting [Persons]
[TRACE] Normalizing identifier quoting [Persons]
[DEBUG] Bind entity model1.Person on table Persons
[TRACE] Processing annotations of model1.Person.id
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Persons), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Person:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(person_id)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model1.Person.address
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='ADDRESS_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [address]
[TRACE] Normalizing identifier quoting [address]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Persons), mappingColumn=address, insertable=true, updatable=true, unique=false}
[TRACE] Fetching address with JOIN
[DEBUG] Building property address
[TRACE] Cascading address with all
[TRACE] Processing annotations of model1.Person.email
[TRACE] Normalizing identifier quoting [email]
[TRACE] Normalizing identifier quoting [email]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Persons), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property email with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Person:email]
[DEBUG] building SimpleValue for email
[TRACE] Normalizing identifier quoting [email]
[TRACE] Normalizing identifier quoting [email]
[TRACE] Normalizing identifier quoting [email]
[DEBUG] Building property email
[TRACE] Cascading email with null
[TRACE] Processing annotations of model1.Person.fName
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Persons), mappingColumn=fName, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property fName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Person:fName]
[DEBUG] building SimpleValue for fName
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Building property fName
[TRACE] Cascading fName with null
[TRACE] Processing annotations of model1.Person.sName
[TRACE] Normalizing identifier quoting [sName]
[TRACE] Normalizing identifier quoting [sName]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Persons), mappingColumn=sName, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property sName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Person:sName]
[DEBUG] building SimpleValue for sName
[TRACE] Normalizing identifier quoting [sName]
[TRACE] Normalizing identifier quoting [sName]
[TRACE] Normalizing identifier quoting [sName]
[DEBUG] Building property sName
[TRACE] Cascading sName with null
[DEBUG] Binding entity from annotated class: model1.Student
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='student_id', referencedColumn='null', mappedBy='null'}
[TRACE] Subclass joined column(s) created
[DEBUG] Import with entity name Student
[TRACE] Import: Student -> model1.Student
[TRACE] Import: model1.Student -> model1.Student
[TRACE] Normalizing identifier quoting [Students]
[TRACE] Normalizing identifier quoting [Students]
[DEBUG] Bind entity model1.Student on table Students
[TRACE] Processing annotations of model1.Student.fieldOfStudys
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='field_of_study_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [fieldOfStudys]
[TRACE] Normalizing identifier quoting [fieldOfStudys]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=fieldOfStudys, insertable=true, updatable=true, unique=false}
[DEBUG] Building property fieldOfStudys
[TRACE] Cascading fieldOfStudys with save-update
[TRACE] Processing annotations of model1.Student.indexNo
[TRACE] Normalizing identifier quoting [indexNo]
[TRACE] Normalizing identifier quoting [indexNo]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=indexNo, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property indexNo with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Student:indexNo]
[DEBUG] building SimpleValue for indexNo
[TRACE] Normalizing identifier quoting [indexNo]
[TRACE] Normalizing identifier quoting [indexNo]
[TRACE] Normalizing identifier quoting [indexNo]
[DEBUG] Building property indexNo
[TRACE] Cascading indexNo with null
[TRACE] Processing annotations of model1.Student.semester
[TRACE] Normalizing identifier quoting [semester]
[TRACE] Normalizing identifier quoting [semester]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=semester, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property semester with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Student:semester]
[DEBUG] building SimpleValue for semester
[TRACE] Normalizing identifier quoting [semester]
[TRACE] Normalizing identifier quoting [semester]
[TRACE] Normalizing identifier quoting [semester]
[DEBUG] Building property semester
[TRACE] Cascading semester with null
[TRACE] Processing annotations of model1.Student.tests
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
[TRACE] Normalizing identifier quoting [tests]
[TRACE] Normalizing identifier quoting [tests]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=tests, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tests_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Students), mappingColumn=tests_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tests_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='tests_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
[DEBUG] Collection role: model1.Student.tests
[DEBUG] Building property tests
[TRACE] Cascading tests with none
[DEBUG] Binding entity from annotated class: model1.Teacher
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [teacher_id]
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='null', mappedBy='null'}
[TRACE] Subclass joined column(s) created
[DEBUG] Import with entity name Teacher
[TRACE] Import: Teacher -> model1.Teacher
[TRACE] Import: model1.Teacher -> model1.Teacher
[TRACE] Normalizing identifier quoting [Teachers]
[TRACE] Normalizing identifier quoting [Teachers]
[DEBUG] Bind entity model1.Teacher on table Teachers
[TRACE] Processing annotations of model1.Teacher.subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='subject_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [subject]
[TRACE] Normalizing identifier quoting [subject]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Teachers), mappingColumn=subject, insertable=true, updatable=true, unique=false}
[DEBUG] Building property subject
[TRACE] Cascading subject with save-update
[TRACE] Processing annotations of model1.Teacher.title
[TRACE] Normalizing identifier quoting [title]
[TRACE] Normalizing identifier quoting [title]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Teachers), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property title with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Teacher:title]
[DEBUG] building SimpleValue for title
[TRACE] Normalizing identifier quoting [title]
[TRACE] Normalizing identifier quoting [title]
[TRACE] Normalizing identifier quoting [title]
[DEBUG] Building property title
[TRACE] Cascading title with null
[DEBUG] Binding entity from annotated class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name FieldOfStudy
[TRACE] Import: FieldOfStudy -> model1.FieldOfStudy
[TRACE] Import: model1.FieldOfStudy -> model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [FieldOfStudies]
[TRACE] Normalizing identifier quoting [FieldOfStudies]
[DEBUG] Bind entity model1.FieldOfStudy on table FieldOfStudies
[TRACE] Processing annotations of model1.FieldOfStudy.id
[TRACE] Normalizing identifier quoting [field_of_study_id]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=field_of_study_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.FieldOfStudy:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(field_of_study_id)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model1.FieldOfStudy.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.FieldOfStudy:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model1.FieldOfStudy.students
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fieldOfStudys'}
[TRACE] Normalizing identifier quoting [students]
[TRACE] Normalizing identifier quoting [students]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=students, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [students_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=students_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [students_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='students_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fieldOfStudys'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='fieldOfStudys'}
[DEBUG] Collection role: model1.FieldOfStudy.students
[DEBUG] Building property students
[TRACE] Cascading students with none
[TRACE] Processing annotations of model1.FieldOfStudy.type
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(FieldOfStudies), mappingColumn=type, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property type with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.FieldOfStudy:type]
[DEBUG] building SimpleValue for type
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Building property type
[TRACE] Cascading type with null
[DEBUG] Binding entity from annotated class: model1.Test
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Test
[TRACE] Import: Test -> model1.Test
[TRACE] Import: model1.Test -> model1.Test
[TRACE] Normalizing identifier quoting [Tests]
[TRACE] Normalizing identifier quoting [Tests]
[DEBUG] Bind entity model1.Test on table Tests
[TRACE] Processing annotations of model1.Test.id
[TRACE] Normalizing identifier quoting [test_id]
[TRACE] Normalizing identifier quoting [test_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tests), mappingColumn=test_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Test:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [test_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(test_id)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model1.Test.date
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tests), mappingColumn=date, insertable=true, updatable=false, unique=false}
[DEBUG] MetadataSourceProcessor property date with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Test:date]
[DEBUG] building SimpleValue for date
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Building property date
[TRACE] Cascading date with null
[TRACE] Processing annotations of model1.Test.grade
[TRACE] Normalizing identifier quoting [grade]
[TRACE] Normalizing identifier quoting [grade]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tests), mappingColumn=grade, insertable=true, updatable=false, unique=false}
[DEBUG] MetadataSourceProcessor property grade with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model1.Test:grade]
[DEBUG] building SimpleValue for grade
[TRACE] Normalizing identifier quoting [grade]
[TRACE] Normalizing identifier quoting [grade]
[TRACE] Normalizing identifier quoting [grade]
[DEBUG] Building property grade
[TRACE] Cascading grade with null
[TRACE] Processing annotations of model1.Test.student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='student_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [student]
[TRACE] Normalizing identifier quoting [student]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tests), mappingColumn=student, insertable=true, updatable=true, unique=false}
[DEBUG] Building property student
[TRACE] Cascading student with none
[TRACE] Processing annotations of model1.Test.subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='subject_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [subject]
[TRACE] Normalizing identifier quoting [subject]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tests), mappingColumn=subject, insertable=true, updatable=true, unique=false}
[DEBUG] Building property subject
[TRACE] Cascading subject with none
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for city
[DEBUG] Starting fillSimpleValue for country
[DEBUG] Starting fillSimpleValue for postalCode
[DEBUG] Starting fillSimpleValue for street
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for email
[DEBUG] Starting fillSimpleValue for fName
[DEBUG] Starting fillSimpleValue for sName
[DEBUG] Starting fillSimpleValue for indexNo
[DEBUG] Starting fillSimpleValue for semester
[DEBUG] Starting fillSimpleValue for title
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for type
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for date
[DEBUG] Starting fillSimpleValue for grade
[TRACE] Normalizing identifier quoting [teacher_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [teacher_id]
[TRACE] Normalizing identifier quoting [teacher_id]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [Persons]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [person_person_id]
[TRACE] Normalizing identifier quoting [person_person_id]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [person_person_id]
[TRACE] Normalizing identifier quoting [person_person_id]
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[TRACE] Normalizing identifier quoting [field_of_study_id]
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Forcing column [address_id] to be non-null as it is part of the primary key for table [addresses]
[DEBUG] Forcing column [subject_id] to be non-null as it is part of the primary key for table [subjects]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[DEBUG] Forcing column [student_id] to be non-null as it is part of the primary key for table [students]
[DEBUG] Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teachers]
[DEBUG] Forcing column [field_of_study_id] to be non-null as it is part of the primary key for table [fieldofstudies]
[DEBUG] Forcing column [test_id] to be non-null as it is part of the primary key for table [tests]
[DEBUG] Second pass for collection: model1.Subject.teachers
[DEBUG] Binding a OneToMany: model1.Subject.teachers through a foreign key
[DEBUG] Mapping collection: model1.Subject.teachers -> Teachers
[DEBUG] Retrieving property model1.Teacher.subject
[DEBUG] Mapped collection key: subject_id, one-to-many: model1.Teacher
[DEBUG] Second pass for collection: model1.Subject.tests
[DEBUG] Binding a OneToMany: model1.Subject.tests through a foreign key
[DEBUG] Mapping collection: model1.Subject.tests -> Tests
[DEBUG] Retrieving property model1.Test.subject
[DEBUG] Mapped collection key: subject_id, one-to-many: model1.Test
[DEBUG] Second pass for collection: model1.Student.tests
[DEBUG] Binding a OneToMany: model1.Student.tests through a foreign key
[DEBUG] Mapping collection: model1.Student.tests -> Tests
[DEBUG] Retrieving property model1.Test.student
[DEBUG] Mapped collection key: student_id, one-to-many: model1.Test
[DEBUG] Second pass for collection: model1.FieldOfStudy.students
[DEBUG] Binding a OneToMany: model1.FieldOfStudy.students through a foreign key
[DEBUG] Mapping collection: model1.FieldOfStudy.students -> Students
[DEBUG] Retrieving property model1.Student.fieldOfStudys
[DEBUG] Mapped collection key: field_of_study_id, one-to-many: model1.Student
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [person_person_id]
[TRACE] Normalizing identifier quoting [FKeew11tmf9htc755i6ot12cjcm]
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[TRACE] Normalizing identifier quoting [FK4sv7yh0nh4bdripegva6vieoo]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Normalizing identifier quoting [FKltd0pyb8u585b7epm34qpjo9m]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [person_person_id]
[DEBUG] Resolving reference to class: model1.Address
[TRACE] Normalizing identifier quoting [ADDRESS_ID]
[DEBUG] Resolving reference to class: model1.FieldOfStudy
[TRACE] Normalizing identifier quoting [field_of_study_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[DEBUG] Resolving reference to class: model1.Person
[TRACE] Normalizing identifier quoting [teacher_id]
[DEBUG] Resolving reference to class: model1.Student
[TRACE] Normalizing identifier quoting [student_id]
[DEBUG] Resolving reference to class: model1.Subject
[TRACE] Normalizing identifier quoting [subject_id]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\b___b\Desktop\SEM_2\ORI\New\out\production\New;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\txw2-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\antlr-2.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\dom4j-2.1.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\stax-ex-1.8.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\c3p0-0.9.5.3.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\log4j-1.2.16.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-api-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\classmate-1.5.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-api-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\byte-buddy-1.10.10.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\FastInfoset-1.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jandex-2.1.3.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jaxb-runtime-2.3.1.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javassist-3.24.0-GA.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\slf4j-log4j12-1.7.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-logging-3.3.2.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.activation-api-1.2.0.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mysql-connector-java-5.1.6.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-c3p0-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\mchange-commons-java-0.2.15.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\istack-commons-runtime-3.0.7.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\javax.persistence-api-2.2-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-core-5.4.18.Final-javadoc.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\b___b\Desktop\SEM_2\ORI\New\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr\bin, sun.java.command=hiberApp.MainApp, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\b___b, hibernate.c3p0.max_statements=10, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.4+10-b304.77, user.name=Brijesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/hiberlab12, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\b___b\AppData\Local\Temp\, java.version=11.0.4, user.dir=C:\Users\b___b\Desktop\SEM_2\ORI\New, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@40712ee9, java.library.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2\jbr\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk-12.0.2\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Android;C:\Windows\System32;C:\Program Files\MATLAB\R2019b\bin;C:\Program Files\dotnet\;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin\;C:\Program Files\IVI Foundation\VISA\Win64\Bin\;C:\Program Files (x86)\IVI Foundation\VISA\WinNT\Bin;C:\Program Files\Java\jdk-15.0.1;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\b___b\AppData\Local\Programs\Python\Python38-32\;C:\Users\b___b\AppData\Local\Microsoft\WindowsApps;;C:\Users\b___b\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\b___b\.dotnet\tools;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, java.vm.version=11.0.4+10-b304.77, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[DEBUG] Not known whether passed class name [model1.Test] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Test
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.LocalDateType@2e54db99], incoming type = [org.hibernate.type.LocalDateType@2e54db99]
[TRACE] Skipping duplicate registration of path [grade], existing type = [org.hibernate.type.DoubleType@1eb6749b], incoming type = [org.hibernate.type.DoubleType@1eb6749b]
[TRACE] Skipping duplicate registration of path [student], existing type = [org.hibernate.type.ManyToOneType(model1.Student)], incoming type = [org.hibernate.type.ManyToOneType(model1.Student)]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [student.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Person
[DEBUG] Not known whether passed class name [model1.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Student
[DEBUG] Not known whether passed class name [model1.Teacher] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Teacher
[DEBUG] Not known whether passed class name [model1.Student] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Student
[DEBUG] Not known whether passed class name [model1.Teacher] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Teacher
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@47605f2f], incoming type = [org.hibernate.type.IntegerType@47605f2f]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[DEBUG] Not known whether passed class name [model1.Address] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Address
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [country], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [person], existing type = [org.hibernate.type.ManyToOneType(model1.Person)], incoming type = [org.hibernate.type.ManyToOneType(model1.Person)]
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [person.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [postalCode], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [street], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [fieldOfStudys], existing type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)], incoming type = [org.hibernate.type.ManyToOneType(model1.FieldOfStudy)]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [fieldOfStudys.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [indexNo], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [semester], existing type = [org.hibernate.type.IntegerType@47605f2f], incoming type = [org.hibernate.type.IntegerType@47605f2f]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Student.tests)], incoming type = [org.hibernate.type.SetType(model1.Student.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[DEBUG] Not known whether passed class name [model1.FieldOfStudy] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.FieldOfStudy
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [students], existing type = [org.hibernate.type.SetType(model1.FieldOfStudy.students)], incoming type = [org.hibernate.type.SetType(model1.FieldOfStudy.students)]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[DEBUG] Not known whether passed class name [model1.Subject] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model1.Subject
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [teachers], existing type = [org.hibernate.type.SetType(model1.Subject.teachers)], incoming type = [org.hibernate.type.SetType(model1.Subject.teachers)]
[TRACE] Skipping duplicate registration of path [tests], existing type = [org.hibernate.type.SetType(model1.Subject.tests)], incoming type = [org.hibernate.type.SetType(model1.Subject.tests)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(model1.Address)], incoming type = [org.hibernate.type.ManyToOneType(model1.Address)]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [sName], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [subject], existing type = [org.hibernate.type.ManyToOneType(model1.Subject)], incoming type = [org.hibernate.type.ManyToOneType(model1.Subject)]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [subject.id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[TRACE] Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@5ce33a58], incoming type = [org.hibernate.type.StringType@5ce33a58]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@207ea13], incoming type = [org.hibernate.type.LongType@207ea13]
[DEBUG] Static SQL for collection: model1.FieldOfStudy.students
[DEBUG]  Row insert: update Students set field_of_study_id=? where student_id=?
[DEBUG]  Row update: update Students set  where student_id=?
[DEBUG]  Row delete: update Students set field_of_study_id=null where field_of_study_id=? and student_id=?
[DEBUG]  One-shot delete: update Students set field_of_study_id=null where field_of_study_id=?
[DEBUG] Static SQL for collection: model1.Student.tests
[DEBUG]  Row insert: update Tests set student_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set student_id=null where student_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set student_id=null where student_id=?
[DEBUG] Static SQL for collection: model1.Subject.teachers
[DEBUG]  Row insert: update Teachers set subject_id=? where teacher_id=?
[DEBUG]  Row update: update Teachers set  where teacher_id=?
[DEBUG]  Row delete: update Teachers set subject_id=null where subject_id=? and teacher_id=?
[DEBUG]  One-shot delete: update Teachers set subject_id=null where subject_id=?
[DEBUG] Static SQL for collection: model1.Subject.tests
[DEBUG]  Row insert: update Tests set subject_id=? where test_id=?
[DEBUG]  Row update: update Tests set  where test_id=?
[DEBUG]  Row delete: update Tests set subject_id=null where subject_id=? and test_id=?
[DEBUG]  One-shot delete: update Tests set subject_id=null where subject_id=?
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.address] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.email] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.fName] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model1.Person.sName] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model1.Test
[DEBUG]  Version select: select test_id from Tests where test_id =?
[DEBUG]  Snapshot select: select test_.test_id, test_.student_id as student_4_6_, test_.subject_id as subject_5_6_ from Tests test_ where test_.test_id=?
[DEBUG]  Insert 0: insert into Tests (date, grade, student_id, subject_id, test_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Tests set student_id=?, subject_id=? where test_id=?
[DEBUG]  Delete 0: delete from Tests where test_id=?
[DEBUG]  Identity insert: insert into Tests (date, grade, student_id, subject_id) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e32fc22]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@712c5463
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@712c5463
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a2585b]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d091cad]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@712c5463
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [NONE]: select test0_.test_id as test_id1_6_0_, test0_.date as date2_6_0_, test0_.grade as grade3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[TRACE]  Starting root entity : model1.Test
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c781a9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71ed560f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Tests, columns={test_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71ed560f
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b88b8e]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58253c57]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71ed560f
[TRACE]  Finished root entity : model1.Test
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Test)
    - Returns
       - EntityReturnImpl(entity=model1.Test, querySpaceUid=<gen:0>, path=model1.Test)
          - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:1>, path=model1.Test.student)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=model1.Test.subject)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Test)
          - SQL table alias mapping - test0_
          - alias suffix - 0_
          - suffixed key columns - {test_id1_6_0_}

[DEBUG] Static select for entity model1.Test [READ]: select test0_.test_id as test_id1_6_0_, test0_.date as date2_6_0_, test0_.grade as grade3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.date as date2_6_0_, test0_.grade as grade3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Test: select test0_.test_id as test_id1_6_0_, test0_.date as date2_6_0_, test0_.grade as grade3_6_0_, test0_.student_id as student_4_6_0_, test0_.subject_id as subject_5_6_0_ from Tests test0_ where test0_.test_id=?
[DEBUG] Static SQL for entity: model1.Person
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select person_.person_id, person_.ADDRESS_ID as address_5_2_, person_.email as email2_2_, person_.fName as fname3_2_, person_.sName as sname4_2_ from Persons person_ where person_.person_id=?
[DEBUG]  Insert 0: insert into Persons (ADDRESS_ID, email, fName, sName, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set ADDRESS_ID=?, email=?, fName=?, sName=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Identity insert: insert into Persons (ADDRESS_ID, email, fName, sName) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6bf8aa]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@13c8ac77
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@13c8ac77
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdf]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@50eb4a2c
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@50eb4a2c
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a256d80]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3069a360
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3069a360
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d3cf7e]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3af58f76]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa4f485]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@999b951]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3069a360
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@50eb4a2c
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65cf4d6d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1b410308
[TRACE] .... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1b410308
[TRACE] >>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : fieldOfStudys.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys.students
[DEBUG] Property path deemed to be circular : fieldOfStudys.students
[DEBUG] Visiting attribute path : fieldOfStudys.type
[TRACE] >>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1b410308
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b0bd001]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9cab00]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10272bbb]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36d33f4
[TRACE] .... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36d33f4
[TRACE] >>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : subject.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject.teachers
[DEBUG] Property path deemed to be circular : subject.teachers
[DEBUG] Visiting attribute path : subject.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16736040]
[DEBUG] Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5d1d25]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@36d33f4
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@13c8ac77
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Person.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Person.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Person.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Person.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Person.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:7>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:8>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:10>, path=model1.Person.subject)
             - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:11>, path=model1.Person.subject.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:12>, path=model1.Person.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.FieldOfStudy)
                - SQL table alias mapping - fieldofstu3_
                - alias suffix - 3_
                - suffixed key columns - {field_of1_1_3_}
          - JOIN (JoinDefinedByMetadata(subject)) : <gen:0> -> <gen:10>
             - EntityQuerySpaceImpl(uid=<gen:10>, entity=model1.Subject)
                - SQL table alias mapping - subject4_
                - alias suffix - 4_
                - suffixed key columns - {subject_1_4_4_}

[DEBUG] Static select for entity model1.Person [NONE]: select person0_.person_id as person_i1_2_0_, person0_.ADDRESS_ID as address_5_2_0_, person0_.email as email2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_1_.indexNo as indexno1_3_0_, person0_1_.semester as semester2_3_0_, person0_2_.subject_id as subject_3_5_0_, person0_2_.title as title1_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_, subject4_.subject_id as subject_1_4_4_, subject4_.name as name2_4_4_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join FieldOfStudies fieldofstu3_ on person0_1_.field_of_study_id=fieldofstu3_.field_of_study_id left outer join Subjects subject4_ on person0_2_.subject_id=subject4_.subject_id where person0_.person_id=?
[TRACE]  Starting root entity : model1.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fa5f81c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a1d526c
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a1d526c
[TRACE] >> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2f0109]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@483b0690
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@483b0690
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687e6293]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6870c3c2
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6870c3c2
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb0a08c]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1faf386c]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4debbf0]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6870c3c2
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@483b0690
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e06f7d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66a5755
[TRACE] .... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66a5755
[TRACE] >>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : fieldOfStudys.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys.students
[DEBUG] Property path deemed to be circular : fieldOfStudys.students
[DEBUG] Visiting attribute path : fieldOfStudys.type
[TRACE] >>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66a5755
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@771a7d53]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6d480c]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e95595b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5a917723
[TRACE] .... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5a917723
[TRACE] >>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : subject.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject.teachers
[DEBUG] Property path deemed to be circular : subject.teachers
[DEBUG] Visiting attribute path : subject.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e4579c7]
[DEBUG] Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796f632b]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5a917723
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a1d526c
[TRACE]  Finished root entity : model1.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Person)
    - Returns
       - EntityReturnImpl(entity=model1.Person, querySpaceUid=<gen:0>, path=model1.Person)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Person.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Person.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Person.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Person.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Person.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Person.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:7>, path=model1.Person.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:8>, path=model1.Person.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Person.tests.<elements>)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:10>, path=model1.Person.subject)
             - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:11>, path=model1.Person.subject.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:12>, path=model1.Person.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.FieldOfStudy)
                - SQL table alias mapping - fieldofstu3_
                - alias suffix - 3_
                - suffixed key columns - {field_of1_1_3_}
          - JOIN (JoinDefinedByMetadata(subject)) : <gen:0> -> <gen:10>
             - EntityQuerySpaceImpl(uid=<gen:10>, entity=model1.Subject)
                - SQL table alias mapping - subject4_
                - alias suffix - 4_
                - suffixed key columns - {subject_1_4_4_}

[DEBUG] Static select for entity model1.Person [READ]: select person0_.person_id as person_i1_2_0_, person0_.ADDRESS_ID as address_5_2_0_, person0_.email as email2_2_0_, person0_.fName as fname3_2_0_, person0_.sName as sname4_2_0_, person0_1_.field_of_study_id as field_of4_3_0_, person0_1_.indexNo as indexno1_3_0_, person0_1_.semester as semester2_3_0_, person0_2_.subject_id as subject_3_5_0_, person0_2_.title as title1_5_0_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_, subject4_.subject_id as subject_1_4_4_, subject4_.name as name2_4_4_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join FieldOfStudies fieldofstu3_ on person0_1_.field_of_study_id=fieldofstu3_.field_of_study_id left outer join Subjects subject4_ on person0_2_.subject_id=subject4_.subject_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Person: select person0_.person_id as person_i1_2_1_, person0_.ADDRESS_ID as address_5_2_1_, person0_.email as email2_2_1_, person0_.fName as fname3_2_1_, person0_.sName as sname4_2_1_, person0_1_.field_of_study_id as field_of4_3_1_, person0_1_.indexNo as indexno1_3_1_, person0_1_.semester as semester2_3_1_, person0_2_.subject_id as subject_3_5_1_, person0_2_.title as title1_5_1_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.ADDRESS_ID=address1_.address_id where person0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Person: select person0_.person_id as person_i1_2_1_, person0_.ADDRESS_ID as address_5_2_1_, person0_.email as email2_2_1_, person0_.fName as fname3_2_1_, person0_.sName as sname4_2_1_, person0_1_.field_of_study_id as field_of4_3_1_, person0_1_.indexNo as indexno1_3_1_, person0_1_.semester as semester2_3_1_, person0_2_.subject_id as subject_3_5_1_, person0_2_.title as title1_5_1_, case when person0_1_.student_id is not null then 1 when person0_2_.teacher_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Persons person0_ left outer join Students person0_1_ on person0_.person_id=person0_1_.student_id left outer join Teachers person0_2_ on person0_.person_id=person0_2_.teacher_id left outer join Addresses address1_ on person0_.ADDRESS_ID=address1_.address_id where person0_.person_id=?
[DEBUG] Static SQL for entity: model1.Address
[DEBUG]  Version select: select address_id from Addresses where address_id =?
[DEBUG]  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.person_person_id as person_p6_0_, address_.postalCode as postalco4_0_, address_.street as street5_0_ from Addresses address_ where address_.address_id=?
[DEBUG]  Insert 0: insert into Addresses (city, country, person_person_id, postalCode, street, address_id) values (?, ?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Addresses set city=?, country=?, person_person_id=?, postalCode=?, street=? where address_id=?
[DEBUG]  Delete 0: delete from Addresses where address_id=?
[DEBUG]  Identity insert: insert into Addresses (city, country, person_person_id, postalCode, street) values (?, ?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b47731f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : person
[TRACE] >> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c2ce52]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@18a19e
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@18a19e
[TRACE] >>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : person.address
[TRACE] >>>> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a7e509]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2e13f304
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2e13f304
[TRACE] >>>>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : person.address.city
[TRACE] >>>>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.country
[TRACE] >>>>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.person
[DEBUG] Property path deemed to be circular : person.address.person
[DEBUG] Visiting attribute path : person.address.postalCode
[TRACE] >>>>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.street
[TRACE] >>>>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2e13f304
[TRACE] <<<< Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : person.email
[TRACE] >>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fName
[TRACE] >>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.sName
[TRACE] >>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fieldOfStudys
[TRACE] >>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787508ca]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3d24420b
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3d24420b
[TRACE] >>>>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : person.fieldOfStudys.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fieldOfStudys.students
[DEBUG] Property path deemed to be circular : person.fieldOfStudys.students
[DEBUG] Visiting attribute path : person.fieldOfStudys.type
[TRACE] >>>>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3d24420b
[TRACE] <<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : person.indexNo
[TRACE] >>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.semester
[TRACE] >>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : person.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6274670b]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ce2392]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : person.subject
[TRACE] >>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d5279]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c067c0d
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c067c0d
[TRACE] >>>>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : person.subject.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.subject.teachers
[DEBUG] Property path deemed to be circular : person.subject.teachers
[DEBUG] Visiting attribute path : person.subject.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d0b0cb9]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7b6639]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1c067c0d
[TRACE] <<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : person.title
[TRACE] >>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@18a19e
[TRACE] << Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@233db8e9
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
          - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:1>, path=model1.Address.person)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=model1.Address.person.address)
             - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Address.person.fieldOfStudys)
             - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Address.person.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Address.person.tests.<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Address.person.subject)
                - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:7>, path=model1.Address.person.subject.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:8>, path=model1.Address.person.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Person)
                - SQL table alias mapping - person1_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=model1.FieldOfStudy)
                      - SQL table alias mapping - fieldofstu3_
                      - alias suffix - 3_
                      - suffixed key columns - {field_of1_1_3_}
                - JOIN (JoinDefinedByMetadata(subject)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=model1.Subject)
                      - SQL table alias mapping - subject4_
                      - alias suffix - 4_
                      - suffixed key columns - {subject_1_4_4_}

[DEBUG] Static select for entity model1.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.person_person_id as person_p6_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_, person1_.person_id as person_i1_2_1_, person1_.ADDRESS_ID as address_5_2_1_, person1_.email as email2_2_1_, person1_.fName as fname3_2_1_, person1_.sName as sname4_2_1_, person1_1_.field_of_study_id as field_of4_3_1_, person1_1_.indexNo as indexno1_3_1_, person1_1_.semester as semester2_3_1_, person1_2_.subject_id as subject_3_5_1_, person1_2_.title as title1_5_1_, case when person1_1_.student_id is not null then 1 when person1_2_.teacher_id is not null then 2 when person1_.person_id is not null then 0 end as clazz_1_, address2_.address_id as address_1_0_2_, address2_.city as city2_0_2_, address2_.country as country3_0_2_, address2_.person_person_id as person_p6_0_2_, address2_.postalCode as postalco4_0_2_, address2_.street as street5_0_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_, subject4_.subject_id as subject_1_4_4_, subject4_.name as name2_4_4_ from Addresses address0_ left outer join Persons person1_ on address0_.person_person_id=person1_.person_id left outer join Students person1_1_ on person1_.person_id=person1_1_.student_id left outer join Teachers person1_2_ on person1_.person_id=person1_2_.teacher_id left outer join Addresses address2_ on person1_.ADDRESS_ID=address2_.address_id left outer join FieldOfStudies fieldofstu3_ on person1_1_.field_of_study_id=fieldofstu3_.field_of_study_id left outer join Subjects subject4_ on person1_2_.subject_id=subject4_.subject_id where address0_.address_id=?
[TRACE]  Starting root entity : model1.Address
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ac5d35]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3965bdf9
[TRACE] .. Registering AssociationKey : AssociationKey(table=Addresses, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3965bdf9
[TRACE] >> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : city
[TRACE] >> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : country
[TRACE] >> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : person
[TRACE] >> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0e00a8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1860f3be
[TRACE] .... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1860f3be
[TRACE] >>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : person.address
[TRACE] >>>> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd15072]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@78cfa264
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@78cfa264
[TRACE] >>>>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : person.address.city
[TRACE] >>>>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.country
[TRACE] >>>>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.person
[DEBUG] Property path deemed to be circular : person.address.person
[DEBUG] Visiting attribute path : person.address.postalCode
[TRACE] >>>>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.address.street
[TRACE] >>>>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@78cfa264
[TRACE] <<<< Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : person.email
[TRACE] >>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fName
[TRACE] >>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.sName
[TRACE] >>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fieldOfStudys
[TRACE] >>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3408f695]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2b6a0ea9
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2b6a0ea9
[TRACE] >>>>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : person.fieldOfStudys.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.fieldOfStudys.students
[DEBUG] Property path deemed to be circular : person.fieldOfStudys.students
[DEBUG] Visiting attribute path : person.fieldOfStudys.type
[TRACE] >>>>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2b6a0ea9
[TRACE] <<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : person.indexNo
[TRACE] >>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.semester
[TRACE] >>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : person.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dde8976]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4887de2b]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : person.subject
[TRACE] >>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4825f0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40ac6b76
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40ac6b76
[TRACE] >>>>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : person.subject.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : person.subject.teachers
[DEBUG] Property path deemed to be circular : person.subject.teachers
[DEBUG] Visiting attribute path : person.subject.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7980cf2c]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0020b1]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40ac6b76
[TRACE] <<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : person.title
[TRACE] >>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1860f3be
[TRACE] << Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : postalCode
[TRACE] >> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : street
[TRACE] >> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3965bdf9
[TRACE]  Finished root entity : model1.Address
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Address)
    - Returns
       - EntityReturnImpl(entity=model1.Address, querySpaceUid=<gen:0>, path=model1.Address)
          - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:1>, path=model1.Address.person)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=model1.Address.person.address)
             - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Address.person.fieldOfStudys)
             - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Address.person.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Address.person.tests.<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Address.person.subject)
                - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:7>, path=model1.Address.person.subject.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:8>, path=model1.Address.person.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}
          - JOIN (JoinDefinedByMetadata(person)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Person)
                - SQL table alias mapping - person1_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=model1.FieldOfStudy)
                      - SQL table alias mapping - fieldofstu3_
                      - alias suffix - 3_
                      - suffixed key columns - {field_of1_1_3_}
                - JOIN (JoinDefinedByMetadata(subject)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=model1.Subject)
                      - SQL table alias mapping - subject4_
                      - alias suffix - 4_
                      - suffixed key columns - {subject_1_4_4_}

[DEBUG] Static select for entity model1.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.person_person_id as person_p6_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_, person1_.person_id as person_i1_2_1_, person1_.ADDRESS_ID as address_5_2_1_, person1_.email as email2_2_1_, person1_.fName as fname3_2_1_, person1_.sName as sname4_2_1_, person1_1_.field_of_study_id as field_of4_3_1_, person1_1_.indexNo as indexno1_3_1_, person1_1_.semester as semester2_3_1_, person1_2_.subject_id as subject_3_5_1_, person1_2_.title as title1_5_1_, case when person1_1_.student_id is not null then 1 when person1_2_.teacher_id is not null then 2 when person1_.person_id is not null then 0 end as clazz_1_, address2_.address_id as address_1_0_2_, address2_.city as city2_0_2_, address2_.country as country3_0_2_, address2_.person_person_id as person_p6_0_2_, address2_.postalCode as postalco4_0_2_, address2_.street as street5_0_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_, subject4_.subject_id as subject_1_4_4_, subject4_.name as name2_4_4_ from Addresses address0_ left outer join Persons person1_ on address0_.person_person_id=person1_.person_id left outer join Students person1_1_ on person1_.person_id=person1_1_.student_id left outer join Teachers person1_2_ on person1_.person_id=person1_2_.teacher_id left outer join Addresses address2_ on person1_.ADDRESS_ID=address2_.address_id left outer join FieldOfStudies fieldofstu3_ on person1_1_.field_of_study_id=fieldofstu3_.field_of_study_id left outer join Subjects subject4_ on person1_2_.subject_id=subject4_.subject_id where address0_.address_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.person_person_id as person_p6_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.person_person_id as person_p6_0_0_, address0_.postalCode as postalco4_0_0_, address0_.street as street5_0_0_ from Addresses address0_ where address0_.address_id=?
[DEBUG] Static SQL for entity: model1.Student
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select student_.student_id, student_1_.ADDRESS_ID as address_5_2_, student_1_.email as email2_2_, student_1_.fName as fname3_2_, student_1_.sName as sname4_2_, student_.field_of_study_id as field_of4_3_, student_.indexNo as indexno1_3_, student_.semester as semester2_3_ from Students student_ inner join Persons student_1_ on student_.student_id=student_1_.person_id where student_.student_id=?
[DEBUG]  Insert 0: insert into Persons (ADDRESS_ID, email, fName, sName, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set ADDRESS_ID=?, email=?, fName=?, sName=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Students (field_of_study_id, indexNo, semester, student_id) values (?, ?, ?, ?)
[DEBUG]  Update 1: update Students set field_of_study_id=?, indexNo=?, semester=? where student_id=?
[DEBUG]  Delete 1: delete from Students where student_id=?
[DEBUG]  Identity insert: insert into Persons (ADDRESS_ID, email, fName, sName) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759de304]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5649d11a
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5649d11a
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294f9d50]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@27443560
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@27443560
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ddb774f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2582b0ef
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2582b0ef
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70721c12]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@769bd849]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@101ca8da]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a967fe]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2582b0ef
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@27443560
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@405b6d75]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@682abca7
[TRACE] .... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@682abca7
[TRACE] >>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : fieldOfStudys.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys.students
[DEBUG] Property path deemed to be circular : fieldOfStudys.students
[DEBUG] Visiting attribute path : fieldOfStudys.type
[TRACE] >>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@682abca7
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d858300]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f881d9]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5649d11a
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Student.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Student.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Student.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Student.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Student.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:7>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:8>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.FieldOfStudy)
                - SQL table alias mapping - fieldofstu3_
                - alias suffix - 3_
                - suffixed key columns - {field_of1_1_3_}

[DEBUG] Static select for entity model1.Student [NONE]: select student0_.student_id as person_i1_2_0_, student0_1_.ADDRESS_ID as address_5_2_0_, student0_1_.email as email2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_.field_of_study_id as field_of4_3_0_, student0_.indexNo as indexno1_3_0_, student0_.semester as semester2_3_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join FieldOfStudies fieldofstu3_ on student0_.field_of_study_id=fieldofstu3_.field_of_study_id where student0_.student_id=?
[TRACE]  Starting root entity : model1.Student
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd36ab6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a13c2f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Students, columns={student_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a13c2f
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@610d28b8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@53c99b09
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@53c99b09
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2539cd1c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c20cdd0
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c20cdd0
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74606204]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b6eae52]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4df0e]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ae0cc89]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c20cdd0
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@53c99b09
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[TRACE] >> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de7e193]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@13e5d243
[TRACE] .... Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@13e5d243
[TRACE] >>>> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : fieldOfStudys.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys.students
[DEBUG] Property path deemed to be circular : fieldOfStudys.students
[DEBUG] Visiting attribute path : fieldOfStudys.type
[TRACE] >>>> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@13e5d243
[TRACE] << Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35ef439e]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4997552e]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@50a13c2f
[TRACE]  Finished root entity : model1.Student
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Student)
    - Returns
       - EntityReturnImpl(entity=model1.Student, querySpaceUid=<gen:0>, path=model1.Student)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Student.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Student.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Student.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Student.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Student.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Student.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:7>, path=model1.Student.fieldOfStudys)
          - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:8>, path=model1.Student.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Student.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(fieldOfStudys)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.FieldOfStudy)
                - SQL table alias mapping - fieldofstu3_
                - alias suffix - 3_
                - suffixed key columns - {field_of1_1_3_}

[DEBUG] Static select for entity model1.Student [READ]: select student0_.student_id as person_i1_2_0_, student0_1_.ADDRESS_ID as address_5_2_0_, student0_1_.email as email2_2_0_, student0_1_.fName as fname3_2_0_, student0_1_.sName as sname4_2_0_, student0_.field_of_study_id as field_of4_3_0_, student0_.indexNo as indexno1_3_0_, student0_.semester as semester2_3_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, fieldofstu3_.field_of_study_id as field_of1_1_3_, fieldofstu3_.name as name2_1_3_, fieldofstu3_.type as type3_1_3_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join FieldOfStudies fieldofstu3_ on student0_.field_of_study_id=fieldofstu3_.field_of_study_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Student: select student0_.student_id as person_i1_2_1_, student0_1_.ADDRESS_ID as address_5_2_1_, student0_1_.email as email2_2_1_, student0_1_.fName as fname3_2_1_, student0_1_.sName as sname4_2_1_, student0_.field_of_study_id as field_of4_3_1_, student0_.indexNo as indexno1_3_1_, student0_.semester as semester2_3_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_1_.ADDRESS_ID=address1_.address_id where student0_.student_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Student: select student0_.student_id as person_i1_2_1_, student0_1_.ADDRESS_ID as address_5_2_1_, student0_1_.email as email2_2_1_, student0_1_.fName as fname3_2_1_, student0_1_.sName as sname4_2_1_, student0_.field_of_study_id as field_of4_3_1_, student0_.indexNo as indexno1_3_1_, student0_.semester as semester2_3_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Students student0_ inner join Persons student0_1_ on student0_.student_id=student0_1_.person_id left outer join Addresses address1_ on student0_1_.ADDRESS_ID=address1_.address_id where student0_.student_id=?
[DEBUG] Static SQL for entity: model1.FieldOfStudy
[DEBUG]  Version select: select field_of_study_id from FieldOfStudies where field_of_study_id =?
[DEBUG]  Snapshot select: select fieldofstu_.field_of_study_id, fieldofstu_.name as name2_1_, fieldofstu_.type as type3_1_ from FieldOfStudies fieldofstu_ where fieldofstu_.field_of_study_id=?
[DEBUG]  Insert 0: insert into FieldOfStudies (name, type, field_of_study_id) values (?, ?, ?)
[DEBUG]  Update 0: update FieldOfStudies set name=?, type=? where field_of_study_id=?
[DEBUG]  Delete 0: delete from FieldOfStudies where field_of_study_id=?
[DEBUG]  Identity insert: insert into FieldOfStudies (name, type) values (?, ?)
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bcecef6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46046c06
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46046c06
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@93824eb]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af52ec7]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46046c06
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
          - CollectionAttributeFetchImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:1>, path=model1.FieldOfStudy.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:2>, path=model1.FieldOfStudy.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [NONE]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[TRACE]  Starting root entity : model1.FieldOfStudy
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c1e611]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12c0c0b3
[TRACE] .. Registering AssociationKey : AssociationKey(table=FieldOfStudies, columns={field_of_study_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12c0c0b3
[TRACE] >> Starting entity identifier : model1.FieldOfStudy
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : students
[TRACE] >> Starting attribute Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a97b17c]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c73fff]
[TRACE] << Finishing up attribute : Attribute(name=students, type=java.util.Set(model1.FieldOfStudy.students) [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12c0c0b3
[TRACE]  Finished root entity : model1.FieldOfStudy
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.FieldOfStudy)
    - Returns
       - EntityReturnImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:0>, path=model1.FieldOfStudy)
          - CollectionAttributeFetchImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:1>, path=model1.FieldOfStudy.students)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:2>, path=model1.FieldOfStudy.students.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.FieldOfStudy)
          - SQL table alias mapping - fieldofstu0_
          - alias suffix - 0_
          - suffixed key columns - {field_of1_1_0_}

[DEBUG] Static select for entity model1.FieldOfStudy [READ]: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.FieldOfStudy: select fieldofstu0_.field_of_study_id as field_of1_1_0_, fieldofstu0_.name as name2_1_0_, fieldofstu0_.type as type3_1_0_ from FieldOfStudies fieldofstu0_ where fieldofstu0_.field_of_study_id=?
[DEBUG] Static SQL for entity: model1.Subject
[DEBUG]  Version select: select subject_id from Subjects where subject_id =?
[DEBUG]  Snapshot select: select subject_.subject_id, subject_.name as name2_4_ from Subjects subject_ where subject_.subject_id=?
[DEBUG]  Insert 0: insert into Subjects (name, subject_id) values (?, ?)
[DEBUG]  Update 0: update Subjects set name=? where subject_id=?
[DEBUG]  Delete 0: delete from Subjects where subject_id=?
[DEBUG]  Identity insert: insert into Subjects (name) values (?)
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cea1b8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@659f226a
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@659f226a
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e463f4]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ec9c90]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36ab3814]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abbd0d9]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@659f226a
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [NONE]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[TRACE]  Starting root entity : model1.Subject
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b61edb9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d3ff859
[TRACE] .. Registering AssociationKey : AssociationKey(table=Subjects, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d3ff859
[TRACE] >> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : teachers
[TRACE] >> Starting attribute Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32bb0072]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@467233e4]
[TRACE] << Finishing up attribute : Attribute(name=teachers, type=java.util.Set(model1.Subject.teachers) [non-identifier,association])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@427a12b6]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6025d790]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d3ff859
[TRACE]  Finished root entity : model1.Subject
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Subject)
    - Returns
       - EntityReturnImpl(entity=model1.Subject, querySpaceUid=<gen:0>, path=model1.Subject)
          - CollectionAttributeFetchImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:1>, path=model1.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:2>, path=model1.Subject.teachers.<elements>)
          - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:3>, path=model1.Subject.tests)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:4>, path=model1.Subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_4_0_}

[DEBUG] Static select for entity model1.Subject [READ]: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Subject: select subject0_.subject_id as subject_1_4_0_, subject0_.name as name2_4_0_ from Subjects subject0_ where subject0_.subject_id=?
[DEBUG] Static SQL for entity: model1.Teacher
[DEBUG]  Version select: select person_id from Persons where person_id =?
[DEBUG]  Snapshot select: select teacher_.teacher_id, teacher_1_.ADDRESS_ID as address_5_2_, teacher_1_.email as email2_2_, teacher_1_.fName as fname3_2_, teacher_1_.sName as sname4_2_, teacher_.subject_id as subject_3_5_, teacher_.title as title1_5_ from Teachers teacher_ inner join Persons teacher_1_ on teacher_.teacher_id=teacher_1_.person_id where teacher_.teacher_id=?
[DEBUG]  Insert 0: insert into Persons (ADDRESS_ID, email, fName, sName, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Persons set ADDRESS_ID=?, email=?, fName=?, sName=? where person_id=?
[DEBUG]  Delete 0: delete from Persons where person_id=?
[DEBUG]  Insert 1: insert into Teachers (subject_id, title, teacher_id) values (?, ?, ?)
[DEBUG]  Update 1: update Teachers set subject_id=?, title=? where teacher_id=?
[DEBUG]  Delete 1: delete from Teachers where teacher_id=?
[DEBUG]  Identity insert: insert into Persons (ADDRESS_ID, email, fName, sName) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af7e376]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5dcd0cdf
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5dcd0cdf
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb04a72]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1e79d43
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1e79d43
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343e225a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1a07bf6
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1a07bf6
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0e426a]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@713ec32d]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d713a2]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36aab105]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1a07bf6
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1e79d43
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@889a8a8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f29353f
[TRACE] .... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f29353f
[TRACE] >>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : subject.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject.teachers
[DEBUG] Property path deemed to be circular : subject.teachers
[DEBUG] Visiting attribute path : subject.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36f7d7b]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60aec68a]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f29353f
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5dcd0cdf
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Teacher.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Teacher.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Teacher.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Teacher.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Teacher.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:7>, path=model1.Teacher.subject)
             - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:8>, path=model1.Teacher.subject.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Teacher.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(subject)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.Subject)
                - SQL table alias mapping - subject3_
                - alias suffix - 3_
                - suffixed key columns - {subject_1_4_3_}

[DEBUG] Static select for entity model1.Teacher [NONE]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.ADDRESS_ID as address_5_2_0_, teacher0_1_.email as email2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_.subject_id as subject_3_5_0_, teacher0_.title as title1_5_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, subject3_.subject_id as subject_1_4_3_, subject3_.name as name2_4_3_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join Subjects subject3_ on teacher0_.subject_id=subject3_.subject_id where teacher0_.teacher_id=?
[TRACE]  Starting root entity : model1.Teacher
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a7fedf]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6361b799
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teachers, columns={teacher_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6361b799
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b9d9a2b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@d919544
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@d919544
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17dad32f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@79696332
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@79696332
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed2f2f6]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fe87ddd]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eea94a4]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c281eb8]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@79696332
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@d919544
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f40689]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@29be997f
[TRACE] .... Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@29be997f
[TRACE] >>>> Starting entity identifier : model1.Subject
[DEBUG] Visiting attribute path : subject.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject.teachers
[DEBUG] Property path deemed to be circular : subject.teachers
[DEBUG] Visiting attribute path : subject.tests
[TRACE] >>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33eb6758]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f8a6243]
[TRACE] <<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Subject.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@29be997f
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6361b799
[TRACE]  Finished root entity : model1.Teacher
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model1.Teacher)
    - Returns
       - EntityReturnImpl(entity=model1.Teacher, querySpaceUid=<gen:0>, path=model1.Teacher)
          - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:1>, path=model1.Teacher.address)
             - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:2>, path=model1.Teacher.address.person)
                - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:3>, path=model1.Teacher.address.person.fieldOfStudys)
                - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=model1.Teacher.address.person.tests)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=model1.Teacher.address.person.tests.<elements>)
                - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=model1.Teacher.address.person.subject)
          - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:7>, path=model1.Teacher.subject)
             - CollectionAttributeFetchImpl(collection=model1.Subject.tests, querySpaceUid=<gen:8>, path=model1.Teacher.subject.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:9>, path=model1.Teacher.subject.tests.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model1.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_2_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(person)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Person)
                      - SQL table alias mapping - person2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_2_2_}
          - JOIN (JoinDefinedByMetadata(subject)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=model1.Subject)
                - SQL table alias mapping - subject3_
                - alias suffix - 3_
                - suffixed key columns - {subject_1_4_3_}

[DEBUG] Static select for entity model1.Teacher [READ]: select teacher0_.teacher_id as person_i1_2_0_, teacher0_1_.ADDRESS_ID as address_5_2_0_, teacher0_1_.email as email2_2_0_, teacher0_1_.fName as fname3_2_0_, teacher0_1_.sName as sname4_2_0_, teacher0_.subject_id as subject_3_5_0_, teacher0_.title as title1_5_0_, address1_.address_id as address_1_0_1_, address1_.city as city2_0_1_, address1_.country as country3_0_1_, address1_.person_person_id as person_p6_0_1_, address1_.postalCode as postalco4_0_1_, address1_.street as street5_0_1_, person2_.person_id as person_i1_2_2_, person2_.ADDRESS_ID as address_5_2_2_, person2_.email as email2_2_2_, person2_.fName as fname3_2_2_, person2_.sName as sname4_2_2_, person2_1_.field_of_study_id as field_of4_3_2_, person2_1_.indexNo as indexno1_3_2_, person2_1_.semester as semester2_3_2_, person2_2_.subject_id as subject_3_5_2_, person2_2_.title as title1_5_2_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_2_, subject3_.subject_id as subject_1_4_3_, subject3_.name as name2_4_3_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id left outer join Subjects subject3_ on teacher0_.subject_id=subject3_.subject_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_1_, teacher0_1_.ADDRESS_ID as address_5_2_1_, teacher0_1_.email as email2_2_1_, teacher0_1_.fName as fname3_2_1_, teacher0_1_.sName as sname4_2_1_, teacher0_.subject_id as subject_3_5_1_, teacher0_.title as title1_5_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_1_.ADDRESS_ID=address1_.address_id where teacher0_.teacher_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model1.Teacher: select teacher0_.teacher_id as person_i1_2_1_, teacher0_1_.ADDRESS_ID as address_5_2_1_, teacher0_1_.email as email2_2_1_, teacher0_1_.fName as fname3_2_1_, teacher0_1_.sName as sname4_2_1_, teacher0_.subject_id as subject_3_5_1_, teacher0_.title as title1_5_1_, address1_.address_id as address_1_0_0_, address1_.city as city2_0_0_, address1_.country as country3_0_0_, address1_.person_person_id as person_p6_0_0_, address1_.postalCode as postalco4_0_0_, address1_.street as street5_0_0_ from Teachers teacher0_ inner join Persons teacher0_1_ on teacher0_.teacher_id=teacher0_1_.person_id left outer join Addresses address1_ on teacher0_1_.ADDRESS_ID=address1_.address_id where teacher0_.teacher_id=?
[TRACE]  Starting root collection : model1.FieldOfStudy.students
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@310ed6b4]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640cc04b]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@630bf683
[TRACE]  Registering AssociationKey : AssociationKey(table=Students, columns={field_of_study_id}) -> null
[TRACE]  Starting collection element graph : model1.FieldOfStudy.students
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6e60f18
[TRACE] >> Starting entity identifier : model1.Student
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cf8676a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@47f04e4d
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@47f04e4d
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3520963d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@388d14e
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@388d14e
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[DEBUG] Property path deemed to be circular : address.person.fieldOfStudys
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cd43562]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59939293]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[TRACE] >>>>>> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b366e2]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@388d14e
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@47f04e4d
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : fieldOfStudys
[DEBUG] Property path deemed to be circular : fieldOfStudys
[DEBUG] Visiting attribute path : indexNo
[TRACE] >> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : semester
[TRACE] >> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : tests
[TRACE] >> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d74c81b]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b687f2]
[TRACE] << Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6e60f18
[TRACE]  Finished collection element graph : model1.FieldOfStudy.students
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@630bf683
[TRACE]  Finished root collection : model1.FieldOfStudy.students
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.FieldOfStudy.students)
    - Returns
       - CollectionReturnImpl(collection=model1.FieldOfStudy.students, querySpaceUid=<gen:0>, path=[model1.FieldOfStudy.students])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Student, querySpaceUid=<gen:1>, path=[model1.FieldOfStudy.students].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.FieldOfStudy.students].<elements>.address)
                - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:3>, path=[model1.FieldOfStudy.students].<elements>.address.person)
                   - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:4>, path=[model1.FieldOfStudy.students].<elements>.address.person.tests)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:5>, path=[model1.FieldOfStudy.students].<elements>.address.person.tests.<elements>)
                   - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:6>, path=[model1.FieldOfStudy.students].<elements>.address.person.subject)
             - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:7>, path=[model1.FieldOfStudy.students].<elements>.tests)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:8>, path=[model1.FieldOfStudy.students].<elements>.tests.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.FieldOfStudy.students)
          - SQL table alias mapping - students0_
          - alias suffix - 0_
          - suffixed key columns - {field_of4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Student)
                - SQL table alias mapping - students0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=model1.Person)
                            - SQL table alias mapping - person2_
                            - alias suffix - 3_
                            - suffixed key columns - {person_i1_2_3_}

[DEBUG] Static select for collection model1.FieldOfStudy.students: select students0_.field_of_study_id as field_of4_3_0_, students0_.student_id as student_3_3_0_, students0_.student_id as person_i1_2_1_, students0_1_.ADDRESS_ID as address_5_2_1_, students0_1_.email as email2_2_1_, students0_1_.fName as fname3_2_1_, students0_1_.sName as sname4_2_1_, students0_.field_of_study_id as field_of4_3_1_, students0_.indexNo as indexno1_3_1_, students0_.semester as semester2_3_1_, address1_.address_id as address_1_0_2_, address1_.city as city2_0_2_, address1_.country as country3_0_2_, address1_.person_person_id as person_p6_0_2_, address1_.postalCode as postalco4_0_2_, address1_.street as street5_0_2_, person2_.person_id as person_i1_2_3_, person2_.ADDRESS_ID as address_5_2_3_, person2_.email as email2_2_3_, person2_.fName as fname3_2_3_, person2_.sName as sname4_2_3_, person2_1_.field_of_study_id as field_of4_3_3_, person2_1_.indexNo as indexno1_3_3_, person2_1_.semester as semester2_3_3_, person2_2_.subject_id as subject_3_5_3_, person2_2_.title as title1_5_3_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_3_ from Students students0_ inner join Persons students0_1_ on students0_.student_id=students0_1_.person_id left outer join Addresses address1_ on students0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id where students0_.field_of_study_id=?
[TRACE]  Starting root collection : model1.Student.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d3b58ca]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e224df5]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@32456db0
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={student_id}) -> null
[TRACE]  Starting collection element graph : model1.Student.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5f5827d0
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : student
[DEBUG] Property path deemed to be circular : student
[DEBUG] Visiting attribute path : subject
[TRACE] >> Starting attribute Attribute(name=subject, type=model1.Subject [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a2d9f9]
[TRACE] << Finishing up attribute : Attribute(name=subject, type=model1.Subject [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5f5827d0
[TRACE]  Finished collection element graph : model1.Student.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@32456db0
[TRACE]  Finished root collection : model1.Student.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Student.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Student.tests, querySpaceUid=<gen:0>, path=[model1.Student.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Student.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Subject, querySpaceUid=<gen:2>, path=[model1.Student.tests].<elements>.subject)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Student.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {student_4_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Student.tests: select tests0_.student_id as student_4_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.date as date2_6_1_, tests0_.grade as grade3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.student_id=?
[TRACE]  Starting root collection : model1.Subject.teachers
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4337afd]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d02af26]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@3fa7df1
[TRACE]  Registering AssociationKey : AssociationKey(table=Teachers, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.teachers
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4dd90166
[TRACE] >> Starting entity identifier : model1.Teacher
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52227eb2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5ad1904f
[TRACE] .... Registering AssociationKey : AssociationKey(table=Persons, columns={ADDRESS_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5ad1904f
[TRACE] >>>> Starting entity identifier : model1.Address
[DEBUG] Visiting attribute path : address.city
[TRACE] >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.country
[TRACE] >>>> Starting attribute Attribute(name=country, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=country, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person
[TRACE] >>>> Starting attribute Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a146b11]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f438904
[TRACE] ...... Registering AssociationKey : AssociationKey(table=Addresses, columns={person_person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f438904
[TRACE] >>>>>> Starting entity identifier : model1.Person
[DEBUG] Visiting attribute path : address.person.address
[DEBUG] Property path deemed to be circular : address.person.address
[DEBUG] Visiting attribute path : address.person.email
[TRACE] >>>>>> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fName
[TRACE] >>>>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.sName
[TRACE] >>>>>> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.fieldOfStudys
[TRACE] >>>>>> Starting attribute Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed5a1b0]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=fieldOfStudys, type=model1.FieldOfStudy [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.indexNo
[TRACE] >>>>>> Starting attribute Attribute(name=indexNo, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=indexNo, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.person.semester
[TRACE] >>>>>> Starting attribute Attribute(name=semester, type=integer [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=semester, type=integer [non-identifier])
[DEBUG] Visiting attribute path : address.person.tests
[TRACE] >>>>>> Starting attribute Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18d003cd]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3135bf25]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=tests, type=java.util.Set(model1.Student.tests) [non-identifier,association])
[DEBUG] Visiting attribute path : address.person.subject
[DEBUG] Property path deemed to be circular : address.person.subject
[DEBUG] Visiting attribute path : address.person.title
[TRACE] >>>>>> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@f438904
[TRACE] <<<< Finishing up attribute : Attribute(name=person, type=model1.Person [non-identifier,association])
[DEBUG] Visiting attribute path : address.postalCode
[TRACE] >>>> Starting attribute Attribute(name=postalCode, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=postalCode, type=string [non-identifier])
[DEBUG] Visiting attribute path : address.street
[TRACE] >>>> Starting attribute Attribute(name=street, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=street, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5ad1904f
[TRACE] << Finishing up attribute : Attribute(name=address, type=model1.Address [non-identifier,association])
[DEBUG] Visiting attribute path : email
[TRACE] >> Starting attribute Attribute(name=email, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : sName
[TRACE] >> Starting attribute Attribute(name=sName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=sName, type=string [non-identifier])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[DEBUG] Visiting attribute path : title
[TRACE] >> Starting attribute Attribute(name=title, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@4dd90166
[TRACE]  Finished collection element graph : model1.Subject.teachers
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@3fa7df1
[TRACE]  Finished root collection : model1.Subject.teachers
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.teachers, querySpaceUid=<gen:0>, path=[model1.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Teacher, querySpaceUid=<gen:1>, path=[model1.Subject.teachers].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Address, querySpaceUid=<gen:2>, path=[model1.Subject.teachers].<elements>.address)
                - EntityAttributeFetchImpl(entity=model1.Person, querySpaceUid=<gen:3>, path=[model1.Subject.teachers].<elements>.address.person)
                   - EntityAttributeFetchImpl(entity=model1.FieldOfStudy, querySpaceUid=<gen:4>, path=[model1.Subject.teachers].<elements>.address.person.fieldOfStudys)
                   - CollectionAttributeFetchImpl(collection=model1.Student.tests, querySpaceUid=<gen:5>, path=[model1.Subject.teachers].<elements>.address.person.tests)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:6>, path=[model1.Subject.teachers].<elements>.address.person.tests.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_3_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Teacher)
                - SQL table alias mapping - teachers0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_2_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model1.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                      - JOIN (JoinDefinedByMetadata(person)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=model1.Person)
                            - SQL table alias mapping - person2_
                            - alias suffix - 3_
                            - suffixed key columns - {person_i1_2_3_}

[DEBUG] Static select for collection model1.Subject.teachers: select teachers0_.subject_id as subject_3_5_0_, teachers0_.teacher_id as teacher_2_5_0_, teachers0_.teacher_id as person_i1_2_1_, teachers0_1_.ADDRESS_ID as address_5_2_1_, teachers0_1_.email as email2_2_1_, teachers0_1_.fName as fname3_2_1_, teachers0_1_.sName as sname4_2_1_, teachers0_.subject_id as subject_3_5_1_, teachers0_.title as title1_5_1_, address1_.address_id as address_1_0_2_, address1_.city as city2_0_2_, address1_.country as country3_0_2_, address1_.person_person_id as person_p6_0_2_, address1_.postalCode as postalco4_0_2_, address1_.street as street5_0_2_, person2_.person_id as person_i1_2_3_, person2_.ADDRESS_ID as address_5_2_3_, person2_.email as email2_2_3_, person2_.fName as fname3_2_3_, person2_.sName as sname4_2_3_, person2_1_.field_of_study_id as field_of4_3_3_, person2_1_.indexNo as indexno1_3_3_, person2_1_.semester as semester2_3_3_, person2_2_.subject_id as subject_3_5_3_, person2_2_.title as title1_5_3_, case when person2_1_.student_id is not null then 1 when person2_2_.teacher_id is not null then 2 when person2_.person_id is not null then 0 end as clazz_3_ from Teachers teachers0_ inner join Persons teachers0_1_ on teachers0_.teacher_id=teachers0_1_.person_id left outer join Addresses address1_ on teachers0_1_.ADDRESS_ID=address1_.address_id left outer join Persons person2_ on address1_.person_person_id=person2_.person_id left outer join Students person2_1_ on person2_.person_id=person2_1_.student_id left outer join Teachers person2_2_ on person2_.person_id=person2_2_.teacher_id where teachers0_.subject_id=?
[TRACE]  Starting root collection : model1.Subject.tests
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22ad1bae]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4116f66a]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@59c04bee
[TRACE]  Registering AssociationKey : AssociationKey(table=Tests, columns={subject_id}) -> null
[TRACE]  Starting collection element graph : model1.Subject.tests
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@45900b64
[TRACE] >> Starting entity identifier : model1.Test
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=LocalDate [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=LocalDate [non-identifier])
[DEBUG] Visiting attribute path : grade
[TRACE] >> Starting attribute Attribute(name=grade, type=double [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=grade, type=double [non-identifier])
[DEBUG] Visiting attribute path : student
[TRACE] >> Starting attribute Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2a1813]
[TRACE] << Finishing up attribute : Attribute(name=student, type=model1.Student [non-identifier,association])
[DEBUG] Visiting attribute path : subject
[DEBUG] Property path deemed to be circular : subject
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@45900b64
[TRACE]  Finished collection element graph : model1.Subject.tests
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@59c04bee
[TRACE]  Finished root collection : model1.Subject.tests
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model1.Subject.tests)
    - Returns
       - CollectionReturnImpl(collection=model1.Subject.tests, querySpaceUid=<gen:0>, path=[model1.Subject.tests])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model1.Test, querySpaceUid=<gen:1>, path=[model1.Subject.tests].<elements>)
             - EntityAttributeFetchImpl(entity=model1.Student, querySpaceUid=<gen:2>, path=[model1.Subject.tests].<elements>.student)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model1.Subject.tests)
          - SQL table alias mapping - tests0_
          - alias suffix - 0_
          - suffixed key columns - {subject_5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - test_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model1.Test)
                - SQL table alias mapping - tests0_
                - alias suffix - 1_
                - suffixed key columns - {test_id1_6_1_}

[DEBUG] Static select for collection model1.Subject.tests: select tests0_.subject_id as subject_5_6_0_, tests0_.test_id as test_id1_6_0_, tests0_.test_id as test_id1_6_1_, tests0_.date as date2_6_1_, tests0_.grade as grade3_6_1_, tests0_.student_id as student_4_6_1_, tests0_.subject_id as subject_5_6_1_ from Tests tests0_ where tests0_.subject_id=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model1.Test]
[TRACE] Building identifier attribute [Test.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private java.lang.Long model1.Test.id]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Test.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [private java.time.LocalDate model1.Test.date]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.LocalDateType]
[TRACE] Building attribute [Test.grade]
[TRACE] Starting attribute metadata determination [grade]
[TRACE]     Determined member [private double model1.Test.grade]
[TRACE]     Determined type [name=double, class=org.hibernate.type.DoubleType]
[TRACE] Building attribute [Test.student]
[TRACE] Starting attribute metadata determination [student]
[TRACE]     Determined member [private model1.Student model1.Test.student]
[TRACE]     Determined type [name=model1.Student, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Test.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [private model1.Subject model1.Test.subject]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model1.Test]
[TRACE] Starting entity [model1.Person]
[TRACE] Building identifier attribute [Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private java.lang.Long model1.Person.id]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Person.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [private model1.Address model1.Person.address]
[TRACE]     Determined type [name=model1.Address, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Person.email]
[TRACE] Starting attribute metadata determination [email]
[TRACE]     Determined member [private java.lang.String model1.Person.email]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.fName]
[TRACE] Starting attribute metadata determination [fName]
[TRACE]     Determined member [private java.lang.String model1.Person.fName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Person.sName]
[TRACE] Starting attribute metadata determination [sName]
[TRACE]     Determined member [private java.lang.String model1.Person.sName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Person]
[TRACE] Starting entity [model1.Address]
[TRACE] Building identifier attribute [Address.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private java.lang.Long model1.Address.id]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Address.city]
[TRACE] Starting attribute metadata determination [city]
[TRACE]     Determined member [private java.lang.String model1.Address.city]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.country]
[TRACE] Starting attribute metadata determination [country]
[TRACE]     Determined member [private java.lang.String model1.Address.country]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.person]
[TRACE] Starting attribute metadata determination [person]
[TRACE]     Determined member [private model1.Person model1.Address.person]
[TRACE]     Determined type [name=model1.Person, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Address.postalCode]
[TRACE] Starting attribute metadata determination [postalCode]
[TRACE]     Determined member [private java.lang.String model1.Address.postalCode]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Address.street]
[TRACE] Starting attribute metadata determination [street]
[TRACE]     Determined member [private java.lang.String model1.Address.street]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Address]
[TRACE] Starting entity [model1.Student]
[TRACE] Building attribute [Student.fieldOfStudys]
[TRACE] Starting attribute metadata determination [fieldOfStudys]
[TRACE]     Determined member [private model1.FieldOfStudy model1.Student.fieldOfStudys]
[TRACE]     Determined type [name=model1.FieldOfStudy, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Student.indexNo]
[TRACE] Starting attribute metadata determination [indexNo]
[TRACE]     Determined member [private java.lang.String model1.Student.indexNo]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Student.semester]
[TRACE] Starting attribute metadata determination [semester]
[TRACE]     Determined member [private int model1.Student.semester]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Student.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [private java.util.Set model1.Student.tests]
[TRACE]     Determined type [name=java.util.Set(model1.Student.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Student]
[TRACE] Starting entity [model1.FieldOfStudy]
[TRACE] Building identifier attribute [FieldOfStudy.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private java.lang.Long model1.FieldOfStudy.id]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [FieldOfStudy.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model1.FieldOfStudy.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [FieldOfStudy.students]
[TRACE] Starting attribute metadata determination [students]
[TRACE]     Determined member [private java.util.Set model1.FieldOfStudy.students]
[TRACE]     Determined type [name=java.util.Set(model1.FieldOfStudy.students), class=org.hibernate.type.SetType]
[TRACE] Building attribute [FieldOfStudy.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [private java.lang.String model1.FieldOfStudy.type]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.FieldOfStudy]
[TRACE] Starting entity [model1.Subject]
[TRACE] Building identifier attribute [Subject.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private java.lang.Long model1.Subject.id]
[TRACE]     Determined type [name=long, class=org.hibernate.type.LongType]
[TRACE] Building attribute [Subject.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model1.Subject.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Subject.teachers]
[TRACE] Starting attribute metadata determination [teachers]
[TRACE]     Determined member [private java.util.Set model1.Subject.teachers]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.teachers), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Subject.tests]
[TRACE] Starting attribute metadata determination [tests]
[TRACE]     Determined member [private java.util.Set model1.Subject.tests]
[TRACE]     Determined type [name=java.util.Set(model1.Subject.tests), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model1.Subject]
[TRACE] Starting entity [model1.Teacher]
[TRACE] Building attribute [Teacher.subject]
[TRACE] Starting attribute metadata determination [subject]
[TRACE]     Determined member [private model1.Subject model1.Teacher.subject]
[TRACE]     Determined type [name=model1.Subject, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Teacher.title]
[TRACE] Starting attribute metadata determination [title]
[TRACE]     Determined member [private java.lang.String model1.Teacher.title]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model1.Teacher]
[TRACE] Normalizing identifier quoting [HT_Persons]
[TRACE] Normalizing identifier quoting [HT_Students]
[TRACE] Normalizing identifier quoting [HT_Teachers]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6411504a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7edb6fca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36776c32
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: a0aa5f35-c893-4d6a-b6f0-245dc3cd729f (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Opened Session [522143a3-8e30-43e2-a131-70e1aecacfde] at timestamp: 1605605240076
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model1.Person#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2dafae61 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7ecda95b [wrapping: com.mysql.jdbc.JDBC4ResultSet@519c6fcc]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7ecda95b [wrapping: com.mysql.jdbc.JDBC4ResultSet@519c6fcc]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2dafae61 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('warsaw', 'germany', null, '30-100', 'waclowska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2dafae61 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('warsaw', 'germany', null, '30-100', 'waclowska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Adding an EntityIdentityInsertAction for [model1.Person] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Person (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@445821a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Person#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@bb25753 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2c0c4c0a]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@bb25753 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2c0c4c0a]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@445821a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (1, 'johnsnith@gmail.com', 'John', 'Smith')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@445821a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (1, 'johnsnith@gmail.com', 'John', 'Smith')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Saving transient instance
[TRACE] Saving [model1.Person#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f73ce28 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@543d5863 [wrapping: com.mysql.jdbc.JDBC4ResultSet@611b35d6]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@543d5863 [wrapping: com.mysql.jdbc.JDBC4ResultSet@611b35d6]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f73ce28 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('gliwice', 'germany', null, '44-100', 'surat')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f73ce28 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('gliwice', 'germany', null, '44-100', 'surat')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Adding an EntityIdentityInsertAction for [model1.Person] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Person#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Person (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@dd3f8aa [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Person#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@40ce9049 [wrapping: com.mysql.jdbc.JDBC4ResultSet@3d615b2e]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@40ce9049 [wrapping: com.mysql.jdbc.JDBC4ResultSet@3d615b2e]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@dd3f8aa [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (2, 'tomjones@gmail.com', 'Tom', 'Jones')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@dd3f8aa [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (2, 'tomjones@gmail.com', 'Tom', 'Jones')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] Listing entities:
[DEBUG] model1.Person{address=model1.Address#2, fName=Tom, sName=Jones, id=2, email=tomjones@gmail.com}
[DEBUG] model1.Address{country=germany, city=warsaw, person=null, street=waclowska, postalCode=30-100, id=1}
[DEBUG] model1.Person{address=model1.Address#1, fName=John, sName=Smith, id=1, email=johnsnith@gmail.com}
[DEBUG] model1.Address{country=germany, city=gliwice, person=null, street=surat, postalCode=44-100, id=2}
[TRACE] Executing flush
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model1.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f3ca64a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2519026b [wrapping: com.mysql.jdbc.JDBC4ResultSet@4d464510]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@2519026b [wrapping: com.mysql.jdbc.JDBC4ResultSet@4d464510]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f3ca64a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('gliwice', 'poland', null, '44-100', 'kujawska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7f3ca64a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('gliwice', 'poland', null, '44-100', 'kujawska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Transient instance of: model1.FieldOfStudy
[TRACE] Saving transient instance
[TRACE] Saving [model1.FieldOfStudy#<null>]
[TRACE] Wrapped collection in role: model1.FieldOfStudy.students
[TRACE] Adding an EntityIdentityInsertAction for [model1.FieldOfStudy] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.FieldOfStudy (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18a096b5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.FieldOfStudy#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7dee835 [wrapping: com.mysql.jdbc.JDBC4ResultSet@79b18230]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7dee835 [wrapping: com.mysql.jdbc.JDBC4ResultSet@79b18230]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18a096b5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values ('Informatics', 'S2')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@18a096b5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values ('Informatics', 'S2')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@796d33eb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3f9b7fe1 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5c059a68]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3f9b7fe1 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5c059a68]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@796d33eb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (3, 'ismail@gmail.com', 'ismail', 'atajanov ')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@796d33eb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (3, 'ismail@gmail.com', 'ismail', 'atajanov ')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Student#3]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2e71240b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#3]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2e71240b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (1, '345293', 5, 3)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2e71240b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (1, '345293', 5, 3)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Saving transient instance
[TRACE] Saving [model1.Student#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Transient instance of: model1.Address
[TRACE] Saving transient instance
[TRACE] Saving [model1.Address#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Address] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Address#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Address (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63a9c661 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Address#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3bb9ca38 [wrapping: com.mysql.jdbc.JDBC4ResultSet@4b425577]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3bb9ca38 [wrapping: com.mysql.jdbc.JDBC4ResultSet@4b425577]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63a9c661 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('katowice', 'poland', null, '42-102', 'Opolska')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63a9c661 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@41a3553e: insert into Addresses (city, country, person_person_id, postalCode, street) values ('katowice', 'poland', null, '42-102', 'Opolska')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Transient instance of: model1.FieldOfStudy
[TRACE] Saving transient instance
[TRACE] Saving [model1.FieldOfStudy#<null>]
[TRACE] Wrapped collection in role: model1.FieldOfStudy.students
[TRACE] Adding an EntityIdentityInsertAction for [model1.FieldOfStudy] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.FieldOfStudy#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.FieldOfStudy (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43471a7e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.FieldOfStudy#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7b53b1ad [wrapping: com.mysql.jdbc.JDBC4ResultSet@21e45a6f]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7b53b1ad [wrapping: com.mysql.jdbc.JDBC4ResultSet@21e45a6f]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43471a7e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values ('Informatics', 'S1')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43471a7e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@19f07d21: insert into FieldOfStudies (name, type) values ('Informatics', 'S1')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Student] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Student#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Student (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7fbd3e75 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3a38f122 [wrapping: com.mysql.jdbc.JDBC4ResultSet@198536f6]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@3a38f122 [wrapping: com.mysql.jdbc.JDBC4ResultSet@198536f6]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7fbd3e75 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (4, 'gafar@gmail.com', 'gafar', 'azeez')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7fbd3e75 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (4, 'gafar@gmail.com', 'gafar', 'azeez')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Student#4]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1c628f6a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Student#4]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1c628f6a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (2, '342292', 2, 4)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1c628f6a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@44af9b2f: insert into Students (field_of_study_id, indexNo, semester, student_id) values (2, '342292', 2, 4)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Saving transient instance
[TRACE] Saving [model1.Teacher#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Transient instance of: model1.Subject
[TRACE] Saving transient instance
[TRACE] Saving [model1.Subject#<null>]
[TRACE] Wrapped collection in role: model1.Subject.teachers
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Subject] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Subject (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e12a5a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Subject#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6f9ab79d [wrapping: com.mysql.jdbc.JDBC4ResultSet@4877919f]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6f9ab79d [wrapping: com.mysql.jdbc.JDBC4ResultSet@4877919f]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e12a5a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values ('ori')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e12a5a6 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values ('ori')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Adding an EntityIdentityInsertAction for [model1.Teacher] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Teacher (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10a18e3e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#<null>]
[DEBUG] Natively generated identity: 5
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4792f119 [wrapping: com.mysql.jdbc.JDBC4ResultSet@69364b2d]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4792f119 [wrapping: com.mysql.jdbc.JDBC4ResultSet@69364b2d]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10a18e3e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (3, 'vishal@gmail.com', 'vish', 'anaghan')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10a18e3e [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (3, 'vishal@gmail.com', 'vish', 'anaghan')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Teacher#5]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@23ca36d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@23ca36d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (1, 'Proff', 5)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@23ca36d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (1, 'Proff', 5)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Saving transient instance
[TRACE] Saving [model1.Teacher#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Transient instance of: model1.Subject
[TRACE] Saving transient instance
[TRACE] Saving [model1.Subject#<null>]
[TRACE] Wrapped collection in role: model1.Subject.teachers
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] Adding an EntityIdentityInsertAction for [model1.Subject] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Subject#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Subject (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@36c7cbe1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Subject#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@794f11cd [wrapping: com.mysql.jdbc.JDBC4ResultSet@1ac6dd3d]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@794f11cd [wrapping: com.mysql.jdbc.JDBC4ResultSet@1ac6dd3d]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@36c7cbe1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values ('avrs')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@36c7cbe1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@734d1acc: insert into Subjects (name) values ('avrs')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Adding an EntityIdentityInsertAction for [model1.Teacher] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Teacher#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Teacher (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d5c41e5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#<null>]
[DEBUG] Natively generated identity: 6
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@499ee966 [wrapping: com.mysql.jdbc.JDBC4ResultSet@43245559]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@499ee966 [wrapping: com.mysql.jdbc.JDBC4ResultSet@43245559]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d5c41e5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (null, 'ashish@gmail.com', 'ashish', 'sutariya')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5d5c41e5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4c6f8ddf: insert into Persons (ADDRESS_ID, email, fName, sName) values (null, 'ashish@gmail.com', 'ashish', 'sutariya')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model1.Teacher#6]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@171dc7c3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Teacher#6]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@171dc7c3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (2, 'Assistance', 6)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@171dc7c3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@5f09fb4: insert into Teachers (subject_id, title, teacher_id) values (2, 'Assistance', 6)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6010d0d1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5b1efaaf [wrapping: com.mysql.jdbc.JDBC4ResultSet@2ba42204]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5b1efaaf [wrapping: com.mysql.jdbc.JDBC4ResultSet@2ba42204]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6010d0d1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-20', 3.0, 4, 2)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6010d0d1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-20', 3.0, 4, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2de6f1bc [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4c731956 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5b35c7d]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@4c731956 [wrapping: com.mysql.jdbc.JDBC4ResultSet@5b35c7d]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2de6f1bc [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-21', 5.0, 3, 1)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2de6f1bc [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-21', 5.0, 3, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model1.Test#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model1.Test] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model1.Test#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model1.Test (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@49cd946c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model1.Test#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@51c65a43 [wrapping: com.mysql.jdbc.JDBC4ResultSet@40bf4386]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@51c65a43 [wrapping: com.mysql.jdbc.JDBC4ResultSet@40bf4386]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@49cd946c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-22', 4.0, 4, 2)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@49cd946c [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@7dcbe186: insert into Tests (date, grade, student_id, subject_id) values ('2020-09-22', 4.0, 4, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Person
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Persistent instance of: model1.FieldOfStudy
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.FieldOfStudy#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#4]
[TRACE] Cascading to save or update: model1.FieldOfStudy
[TRACE] Persistent instance of: model1.FieldOfStudy
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.FieldOfStudy#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Student
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Address
[TRACE] Persistent instance of: model1.Address
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Address#3]
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[TRACE] Cascading to save or update: model1.Subject
[TRACE] Persistent instance of: model1.Subject
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model1.Subject#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model1.Teacher
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] model1.Student.tests is dirty
[TRACE] Found dirty properties [[model1.Student#3]] : [tests]
[TRACE] Updating entity: [model1.Student#3]
[DEBUG] Collection found: [model1.Student.tests#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.FieldOfStudy.students#1], was: [<unreferenced>] (initialized)
[TRACE] Wrapped collection in role: model1.Student.tests
[TRACE] model1.Student.tests is dirty
[TRACE] Found dirty properties [[model1.Student#4]] : [tests]
[TRACE] Updating entity: [model1.Student#4]
[DEBUG] Collection found: [model1.Student.tests#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.FieldOfStudy.students#2], was: [<unreferenced>] (initialized)
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] model1.Subject.tests is dirty
[TRACE] Found dirty properties [[model1.Subject#1]] : [tests]
[TRACE] Updating entity: [model1.Subject#1]
[DEBUG] Collection found: [model1.Subject.teachers#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.Subject.tests#1], was: [<unreferenced>] (initialized)
[TRACE] Wrapped collection in role: model1.Subject.tests
[TRACE] model1.Subject.tests is dirty
[TRACE] Found dirty properties [[model1.Subject#2]] : [tests]
[TRACE] Updating entity: [model1.Subject#2]
[DEBUG] Collection found: [model1.Subject.teachers#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model1.Subject.tests#2], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[DEBUG] Found collection with unloaded owner: [<unreferenced>]
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 4 updates, 0 deletions to 17 objects
[DEBUG] Flushed: 8 (re)creations, 0 updates, 0 removals to 12 collections
[DEBUG] Listing entities:
[DEBUG] model1.Test{date=2020-09-22, student=model1.Student#4, subject=model1.Subject#2, grade=4.0, id=3}
[DEBUG] model1.Address{country=poland, city=gliwice, person=null, street=kujawska, postalCode=44-100, id=3}
[DEBUG] model1.Test{date=2020-09-21, student=model1.Student#3, subject=model1.Subject#1, grade=5.0, id=2}
[DEBUG] model1.Address{country=poland, city=katowice, person=null, street=Opolska, postalCode=42-102, id=4}
[DEBUG] model1.Test{date=2020-09-20, student=model1.Student#4, subject=model1.Subject#2, grade=3.0, id=1}
[DEBUG] model1.Address{country=germany, city=warsaw, person=null, street=waclowska, postalCode=30-100, id=1}
[DEBUG] model1.Address{country=germany, city=gliwice, person=null, street=surat, postalCode=44-100, id=2}
[DEBUG] model1.Teacher{address=null, fName=ashish, subject=model1.Subject#2, sName=sutariya, id=6, title=Assistance, email=ashish@gmail.com}
[DEBUG] model1.Student{address=model1.Address#4, fName=gafar, tests=[model1.Test#1], sName=azeez, indexNo=342292, semester=2, id=4, fieldOfStudys=model1.FieldOfStudy#2, email=gafar@gmail.com}
[DEBUG] model1.Subject{tests=[model1.Test#1, model1.Test#2, model1.Test#3], teachers=[], name=avrs, id=2}
[DEBUG] model1.Subject{tests=[model1.Test#2, model1.Test#3], teachers=[], name=ori, id=1}
[DEBUG] model1.Teacher{address=model1.Address#3, fName=vish, subject=model1.Subject#1, sName=anaghan, id=5, title=Proff, email=vishal@gmail.com}
[DEBUG] model1.Person{address=model1.Address#2, fName=Tom, sName=Jones, id=2, email=tomjones@gmail.com}
[DEBUG] model1.Student{address=model1.Address#3, fName=ismail, tests=[model1.Test#1, model1.Test#2, model1.Test#3], sName=atajanov , indexNo=345293, semester=5, id=3, fieldOfStudys=model1.FieldOfStudy#1, email=ismail@gmail.com}
[DEBUG] model1.FieldOfStudy{name=Informatics, students=[], id=2, type=S1}
[DEBUG] model1.Person{address=model1.Address#1, fName=John, sName=Smith, id=1, email=johnsnith@gmail.com}
[DEBUG] model1.FieldOfStudy{name=Informatics, students=[], id=1, type=S2}
[TRACE] Executing flush
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [522143a3-8e30-43e2-a131-70e1aecacfde]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@541bf968]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
